OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-04T14:58:05.824375-03:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-ccd1f64.22avv0uznvux21ys7z15o9u6r', '1' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum tablasRechazadas jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar  piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco cantMovimientos|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\rganador:=nil.\rcantMovimientos:=0.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=true.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.\r\t ].\t\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r(ganador)ifNil: [ "Si no se comio al rey elimino la pieza de la coleccion caso contrario salteo"\r\t(piezaComida )ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r\t].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=false.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNil)) ifTrue: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.].\r\r"SUMO MOVIMIENTO Y VERIFICO SI SE EXEDIO PARA TERMINAR EL JUEGO EN TABLAS"\rcantMovimientos := cantMovimientos +1.\r(cantMovimientos >= movimientosMax )ifTrue: [ ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas por que se realizo la cantidad de movimientos preestablecida por los jugadores\') title: \'FIN DEL JUEGO\'.\r\t\t\t].\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r].\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].',			#stamp : 'ManuelLatorre 7/31/2019 14:29',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum tablasRechazadas jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar  piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco cantMovimientos empate|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\rganador:=nil.\rcantMovimientos:=0.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=true.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.\r\t ].\t\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r(ganador)ifNil: [ "Si no se comio al rey elimino la pieza de la coleccion caso contrario salteo"\r\t(piezaComida )ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r\t].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=false.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNil)) ifTrue: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.].\r\r"SUMO MOVIMIENTO Y VERIFICO SI SE EXEDIO PARA TERMINAR EL JUEGO EN TABLAS"\rcantMovimientos := cantMovimientos +1.\r(cantMovimientos >= movimientosMax )ifTrue: [ ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas por que se realizo la cantidad de movimientos preestablecida por los jugadores\') title: \'FIN DEL JUEGO\'.\r\t\t\t].\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r].\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].',			#stamp : 'ManuelLatorre 8/4/2019 14:58',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-04T14:59:57.104375-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum tablasRechazadas jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar  piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco cantMovimientos empate|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\rganador:=nil.\rcantMovimientos:=0.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=true.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.\r\t ].\t\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r(ganador)ifNil: [ "Si no se comio al rey elimino la pieza de la coleccion caso contrario salteo"\r\t(piezaComida )ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r\t].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=false.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNil)) ifTrue: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.].\r\r"SUMO MOVIMIENTO Y VERIFICO SI SE EXEDIO PARA TERMINAR EL JUEGO EN TABLAS"\rcantMovimientos := cantMovimientos +1.\r(cantMovimientos >= movimientosMax )ifTrue: [ ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas por que se realizo la cantidad de movimientos preestablecida por los jugadores\') title: \'FIN DEL JUEGO\'.\r\t\t\t].\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r].\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].',			#stamp : 'ManuelLatorre 8/4/2019 14:58',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum tablasRechazadas jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar  piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco cantMovimientos empate|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\rganador:=nil.\rcantMovimientos:=0.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=true.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.\r\t ].\t\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r(ganador)ifNil: [ "Si no se comio al rey elimino la pieza de la coleccion caso contrario salteo"\r\t(piezaComida )ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorFueraTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r\t].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=false.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNil)) ifTrue: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.].\r\r"SUMO MOVIMIENTO Y VERIFICO SI SE EXEDIO PARA TERMINAR EL JUEGO EN TABLAS"\rcantMovimientos := cantMovimientos +1.\r(cantMovimientos >= movimientosMax )ifTrue: [ ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas por que se realizo la cantidad de movimientos preestablecida por los jugadores\') title: \'FIN DEL JUEGO\'.\r\t\t\t].\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r].\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].',			#stamp : 'ManuelLatorre 8/4/2019 14:59',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-04T16:47:13.467375-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'cambioCharANumero:',			#protocol : #Aplicacion,			#sourceCode : 'cambioCharANumero: unaLetra "Como el tablero representa las columnas por letras y mi programa funciona con una matriz (funciona con numeros para filas y columnas) y como no encontre ningun metodo apropiado creo este para poder saber a que fila de mi matriz se refiere con determinadas letras, el \'UIManager default request:\' guarda lo ingresado como string por esto mismo tambien transformo los \'numeros\' de fila ingresados a su respectivo entero "\r|numeroLetra|\r((unaLetra=\'A\') | (unaLetra=\'a\')|(unaLetra=\'1\'))ifTrue: [ numeroLetra :=1 ]."Puede largar mensaje warning ya que tengo un or comparando la misma letra mayuscula y minuscula"\r((unaLetra=\'B\') | (unaLetra=\'b\')|(unaLetra=\'2\'))ifTrue: [ numeroLetra :=2 ].\r((unaLetra=\'C\') | (unaLetra=\'c\')|(unaLetra=\'3\'))ifTrue: [ numeroLetra :=3 ].\r((unaLetra=\'D\') | (unaLetra=\'d\')|(unaLetra=\'4\'))ifTrue: [ numeroLetra :=4 ].\r((unaLetra=\'E\') | (unaLetra=\'e\')|(unaLetra=\'5\'))ifTrue: [ numeroLetra :=5 ].\r((unaLetra=\'F\') | (unaLetra=\'f\')|(unaLetra=\'6\'))ifTrue: [ numeroLetra :=6 ].\r((unaLetra=\'G\') | (unaLetra=\'g\')|(unaLetra=\'7\'))ifTrue: [ numeroLetra :=7 ].\r((unaLetra=\'H\') | (unaLetra=\'h\')|(unaLetra=\'8\'))ifTrue: [ numeroLetra :=8 ].\r^numeroLetra.\r\r',			#stamp : 'Manuel 7/23/2019 17:55',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'cambioCharANumero:',			#protocol : #Aplicacion,			#sourceCode : 'cambioCharANumero: unaLetra "Como el tablero representa las columnas por letras y mi programa funciona con una matriz (funciona con numeros para filas y columnas) y como no encontre ningun metodo apropiado creo este para poder saber a que fila de mi matriz se refiere con determinadas letras, el \'UIManager default request:\' guarda lo ingresado como string por esto mismo tambien transformo los \'numeros\' de fila ingresados a su respectivo entero "\r|numeroLetra|\r((unaLetra=\'A\') | (unaLetra=\'a\')|(unaLetra=\'1\'))ifTrue: [ numeroLetra :=1 ].\r((unaLetra=\'B\') | (unaLetra=\'b\')|(unaLetra=\'2\'))ifTrue: [ numeroLetra :=2 ].\r((unaLetra=\'C\') | (unaLetra=\'c\')|(unaLetra=\'3\'))ifTrue: [ numeroLetra :=3 ].\r((unaLetra=\'D\') | (unaLetra=\'d\')|(unaLetra=\'4\'))ifTrue: [ numeroLetra :=4 ].\r((unaLetra=\'E\') | (unaLetra=\'e\')|(unaLetra=\'5\'))ifTrue: [ numeroLetra :=5 ].\r((unaLetra=\'F\') | (unaLetra=\'f\')|(unaLetra=\'6\'))ifTrue: [ numeroLetra :=6 ].\r((unaLetra=\'G\') | (unaLetra=\'g\')|(unaLetra=\'7\'))ifTrue: [ numeroLetra :=7 ].\r((unaLetra=\'H\') | (unaLetra=\'h\')|(unaLetra=\'8\'))ifTrue: [ numeroLetra :=8 ].\r^numeroLetra.\r\r',			#stamp : 'ManuelLatorre 8/4/2019 16:47',			#package : #'POO Tp obligatorio libre 2'		}	}}