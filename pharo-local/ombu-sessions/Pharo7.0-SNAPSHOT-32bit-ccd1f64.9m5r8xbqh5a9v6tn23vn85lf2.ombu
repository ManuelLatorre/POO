OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T15:04:09.162534-03:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-ccd1f64.583c34bhf66szy6x2dmrdkvlb', '3' ],		#self : OmReference [ '1' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'ImageMorph subclass: #Pieza\r\tinstanceVariableNames: \'filaPieza columnaPieza colPosiblesMovimientos\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'POO Tp obligatorio libre Ajedrez\'',				#superclassName : 'ImageMorph'			},			#name : #Pieza,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pieza,						#isMetaSide : false					},					#name : #filaPieza,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pieza,						#isMetaSide : false					},					#name : #columnaPieza,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pieza,						#isMetaSide : false					},					#name : #colPosiblesMovimientos,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pieza class\r\tinstanceVariableNames: \'\''				},				#name : #'Pieza class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pieza,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'POO Tp obligatorio libre Ajedrez',			#package : #'POO Tp obligatorio libre Ajedrez',			#sharedPools : OrderedCollection [ ]		},		#protocol : #Movimientos	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T15:09:30.721534-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #'diagonalesenTablero:',			#protocol : #Movimientos,			#sourceCode : 'diagonalesenTablero: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rcolPosiblesMovimientos reset.\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].',			#stamp : 'ManuelLatorre 8/17/2019 15:09',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T15:09:43.739534-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Alfil,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rcolPosiblesMovimientos reset.\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Alfil,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rself diagonalesenTablero: unTablero.\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 15:09',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T15:09:52.530534-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Alfil,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rself diagonalesenTablero: unTablero.\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 15:09',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Alfil,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\rself diagonalesenTablero: unTablero.\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 15:09',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T15:15:40.628534-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #'rectasEnTablero:',			#protocol : #Movimientos,			#sourceCode : 'rectasEnTablero: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rcolPosiblesMovimientos reset.\r[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].',			#stamp : 'ManuelLatorre 8/17/2019 15:15',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T15:16:21.913534-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Torre,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rcolPosiblesMovimientos reset.\r[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Torre,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\rself rectasEnTablero: unTablero.\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 15:16',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:03:22.878534-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero',			#stamp : 'ManuelLatorre 8/17/2019 16:03',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:08:02.348534-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero',			#stamp : 'ManuelLatorre 8/17/2019 16:03',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos|\rlistaMovimientos:= OrderedCollection new.\rfilaPieza.\rcolumnaPieza .\rarriba:=#((filaPieza-1) (columnaPieza)).\rabajo:=#((filaPieza+1) (columnaPieza)).\rderecha:=#((filaPieza) (columnaPieza+1)).\rizquierda:=#((filaPieza+1) (columnaPieza-1)).\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:08',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:11:57.242534-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcolPosiblesMovimientos reset.\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo izquierda"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila >1)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba derecha"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| self verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:11',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:13:54.457534-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos|\rlistaMovimientos:= OrderedCollection new.\rfilaPieza.\rcolumnaPieza .\rarriba:=#((filaPieza-1) (columnaPieza)).\rabajo:=#((filaPieza+1) (columnaPieza)).\rderecha:=#((filaPieza) (columnaPieza+1)).\rizquierda:=#((filaPieza+1) (columnaPieza-1)).\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:08',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos|\rlistaMovimientos:= OrderedCollection new.\rarriba:=#((filaPieza-1) (columnaPieza)).\rabajo:=#((filaPieza+1) (columnaPieza)).\rderecha:=#((filaPieza) (columnaPieza+1)).\rizquierda:=#((filaPieza+1) (columnaPieza-1)).\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:13',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:27:04.251534-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos|\rlistaMovimientos:= OrderedCollection new.\rarriba:=#((filaPieza-1) (columnaPieza)).\rabajo:=#((filaPieza+1) (columnaPieza)).\rderecha:=#((filaPieza) (columnaPieza+1)).\rizquierda:=#((filaPieza+1) (columnaPieza-1)).\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:13',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: columnaPieza.\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: columnaPieza.\r\rderecha:=Array new:2.\rderecha at: 1  put: filaPieza.\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: filaPieza.\rizquierda at: 2 put: (columnaPieza-1).\r\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:27',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:28:26.400534-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: columnaPieza.\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: columnaPieza.\r\rderecha:=Array new:2.\rderecha at: 1  put: filaPieza.\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: filaPieza.\rizquierda at: 2 put: (columnaPieza-1).\r\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:27',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: (columnaPieza).\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: (columnaPieza).\r\rderecha:=Array new:2.\rderecha at: 1  put: (filaPieza).\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: (filaPieza).\rizquierda at: 2 put: (columnaPieza-1).\r\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:28',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:37:39.344534-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| self verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:11',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t((movimiento at:1)>1 & (movimiento at:1)<8&(movimiento at:2)>1 & (movimiento at:2)<8)ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:37',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:38:42.509534-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t((movimiento at:1)>1 & (movimiento at:1)<8&(movimiento at:2)>1 & (movimiento at:2)<8)ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:37',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:38',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:44:53.890534-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:38',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\r\rlistaMovimientos do:[:movimiento| \r\tlistaMovimientos := self movimientoUnCasillero.\r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:44',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:45:11.840534-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\r\rlistaMovimientos do:[:movimiento| \r\tlistaMovimientos := self movimientoUnCasillero.\r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:44',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\tlistaMovimientos := self movimientoUnCasillero.\r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:45',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:45:48.107534-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\tlistaMovimientos := self movimientoUnCasillero.\r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:45',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero.\r\tlistaMovimientos := self movimientoUnCasillero.\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:45',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:46:01.747534-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero.\r\tlistaMovimientos := self movimientoUnCasillero.\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:45',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero.\r\t].\rlistaMovimientos := self movimientoUnCasillero.\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:46',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:51:27.572534-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>1) & ((movimiento at:1)<8) & ((movimiento at:2)>1) & ((movimiento at:2)<8))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero.\r\t].\rlistaMovimientos := self movimientoUnCasillero.\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:46',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>0) & ((movimiento at:1)<9) & ((movimiento at:2)>0) & ((movimiento at:2)<9))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero.\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:51',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:55:34.815534-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>0) & ((movimiento at:1)<9) & ((movimiento at:2)>0) & ((movimiento at:2)<9))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero.\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:51',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>0) & ((movimiento at:1)<9) & ((movimiento at:2)>0) & ((movimiento at:2)<9)& ((((movimiento at:1)=filaPieza ) & ((movimiento at:2)=columnaPieza))isFalse))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero.\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:55',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T16:58:08.570534-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>0) & ((movimiento at:1)<9) & ((movimiento at:2)>0) & ((movimiento at:2)<9)& ((((movimiento at:1)=filaPieza ) & ((movimiento at:2)=columnaPieza))isFalse))ifTrue:[\r\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: unTablero.\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:55',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>0) & ((movimiento at:1)<9) & ((movimiento at:2)>0) & ((movimiento at:2)<9))\tifTrue:[\r\t\t(((movimiento at:1)=filaPieza) & ((movimiento at:2)=columnaPieza))ifFalse: [ \r\t\t\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: \t\t\tunTablero.\r\t\t].\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:58',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:05:19.535534-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Alfil,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\rself diagonalesenTablero: unTablero.\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 15:09',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Alfil,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\rcolPosiblesMovimientos reset.\rself diagonalesenTablero: unTablero.\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:05',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:05:33.026534-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>0) & ((movimiento at:1)<9) & ((movimiento at:2)>0) & ((movimiento at:2)<9))\tifTrue:[\r\t\t(((movimiento at:1)=filaPieza) & ((movimiento at:2)=columnaPieza))ifFalse: [ \r\t\t\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: \t\t\tunTablero.\r\t\t].\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:58',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|listaMovimientos|\rcolPosiblesMovimientos reset.\rlistaMovimientos := self movimientoUnCasillero.\rlistaMovimientos do:[:movimiento| \r\t(((movimiento at:1)>0) & ((movimiento at:1)<9) & ((movimiento at:2)>0) & ((movimiento at:2)<9))\tifTrue:[\r\t\t(((movimiento at:1)=filaPieza) & ((movimiento at:2)=columnaPieza))ifFalse: [ \r\t\t\tself verificarEscaqueEnFila: (movimiento at:1) enColumna: (movimiento at:2)  enTablero: \t\t\tunTablero.\r\t\t].\r\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:05',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:15:58.544534-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: (columnaPieza).\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: (columnaPieza).\r\rderecha:=Array new:2.\rderecha at: 1  put: (filaPieza).\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: (filaPieza).\rizquierda at: 2 put: (columnaPieza-1).\r\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 16:28',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos diagonalIzquierdaArriba diagonalDerechaAbajo diagonalIzquierdaAbajo diagonalDerechaArriba|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: (columnaPieza).\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: (columnaPieza).\r\rderecha:=Array new:2.\rderecha at: 1  put: (filaPieza).\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: (filaPieza).\rizquierda at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaAbajo:=Array new:2.\rdiagonalIzquierdaAbajo at: 1  put: (filaPieza+1).\rdiagonalIzquierdaAbajo at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaAbajo:=Array new:2.\rdiagonalIzquierdaArriba at: 1  put: (filaPieza+1).\rdiagonalIzquierdaArriba at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaArriba:=Array new:2.\rdiagonalIzquierdaArriba at: 1  put: (filaPieza-1).\rdiagonalIzquierdaArriba at: 2 put: (columnaPieza-1).\r\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:15',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:16:51.775534-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos diagonalIzquierdaArriba diagonalDerechaAbajo diagonalIzquierdaAbajo diagonalDerechaArriba|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: (columnaPieza).\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: (columnaPieza).\r\rderecha:=Array new:2.\rderecha at: 1  put: (filaPieza).\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: (filaPieza).\rizquierda at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaAbajo:=Array new:2.\rdiagonalIzquierdaAbajo at: 1  put: (filaPieza+1).\rdiagonalIzquierdaAbajo at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaAbajo:=Array new:2.\rdiagonalIzquierdaArriba at: 1  put: (filaPieza+1).\rdiagonalIzquierdaArriba at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaArriba:=Array new:2.\rdiagonalIzquierdaArriba at: 1  put: (filaPieza-1).\rdiagonalIzquierdaArriba at: 2 put: (columnaPieza-1).\r\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:15',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos diagonalIzquierdaArriba diagonalDerechaAbajo diagonalIzquierdaAbajo diagonalDerechaArriba|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: (columnaPieza).\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: (columnaPieza).\r\rderecha:=Array new:2.\rderecha at: 1  put: (filaPieza).\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: (filaPieza).\rizquierda at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaAbajo:=Array new:2.\rdiagonalIzquierdaAbajo at: 1  put: (filaPieza+1).\rdiagonalIzquierdaAbajo at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaArriba:=Array new:2.\rdiagonalIzquierdaArriba at: 1  put: (filaPieza-1).\rdiagonalIzquierdaArriba at: 2 put: (columnaPieza-1).\r\rdiagonalDerechaAbajo \r\r\r\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:16',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:21:12.402534-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos diagonalIzquierdaArriba diagonalDerechaAbajo diagonalIzquierdaAbajo diagonalDerechaArriba|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: (columnaPieza).\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: (columnaPieza).\r\rderecha:=Array new:2.\rderecha at: 1  put: (filaPieza).\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: (filaPieza).\rizquierda at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaAbajo:=Array new:2.\rdiagonalIzquierdaAbajo at: 1  put: (filaPieza+1).\rdiagonalIzquierdaAbajo at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaArriba:=Array new:2.\rdiagonalIzquierdaArriba at: 1  put: (filaPieza-1).\rdiagonalIzquierdaArriba at: 2 put: (columnaPieza-1).\r\rdiagonalDerechaAbajo \r\r\r\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:16',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #movimientoUnCasillero,			#protocol : #Movimientos,			#sourceCode : 'movimientoUnCasillero\r|arriba abajo derecha izquierda listaMovimientos diagonalIzquierdaArriba diagonalDerechaAbajo diagonalIzquierdaAbajo diagonalDerechaArriba|\rlistaMovimientos:= OrderedCollection new.\rarriba:= Array new:2.\rarriba at: 1  put: (filaPieza-1).\rarriba at: 2 put: (columnaPieza).\r\rabajo:=Array new:2.\rabajo at: 1  put: (filaPieza+1).\rabajo at: 2 put: (columnaPieza).\r\rderecha:=Array new:2.\rderecha at: 1  put: (filaPieza).\rderecha at: 2 put: (columnaPieza+1).\r\rizquierda:=Array new:2.\rizquierda at: 1  put: (filaPieza).\rizquierda at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaAbajo:=Array new:2.\rdiagonalIzquierdaAbajo at: 1  put: (filaPieza+1).\rdiagonalIzquierdaAbajo at: 2 put: (columnaPieza-1).\r\rdiagonalIzquierdaArriba:=Array new:2.\rdiagonalIzquierdaArriba at: 1  put: (filaPieza-1).\rdiagonalIzquierdaArriba at: 2 put: (columnaPieza-1).\r\r\rdiagonalDerechaAbajo :=Array new:2.\rdiagonalDerechaAbajo at: 1  put: (filaPieza+1).\rdiagonalDerechaAbajo at: 2 put: (columnaPieza+1).\r\rdiagonalDerechaArriba :=Array new:2.\rdiagonalDerechaArriba at: 1  put: (filaPieza-1).\rdiagonalDerechaArriba at: 2 put: (columnaPieza+1).\r\rlistaMovimientos add:arriba.\rlistaMovimientos add:abajo.\rlistaMovimientos add:derecha.\rlistaMovimientos add:izquierda.\rlistaMovimientos add:diagonalIzquierdaArriba.\rlistaMovimientos add:diagonalIzquierdaAbajo.\rlistaMovimientos add:diagonalDerechaAbajo.\rlistaMovimientos add:diagonalDerechaArriba.\r^listaMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:21',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:43:19.750534-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(filaPieza =8)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\t].\r\t(filaPieza =1)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r\t].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/3/2019 16:29',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno=1.\r(color=(Color white))ifTrue: [ \r\tsigno:=-1.\r\t ].\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+(1*signo).\r\tfilaEscaqueMovDosPos := filaPieza+(2*signo).\r\t((filaPieza<8 & signo=1)|(filaPieza >1 & signo=(-1))) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +(1*signo).\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+(1*signo).\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +(1*signo).\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t((filaPieza =8 & signo=1) | (filaPieza =1 & signo =(-1)))ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:43',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:44:23.932534-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno=1.\r(color=(Color white))ifTrue: [ \r\tsigno:=-1.\r\t ].\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+(1*signo).\r\tfilaEscaqueMovDosPos := filaPieza+(2*signo).\r\t((filaPieza<8 & signo=1)|(filaPieza >1 & signo=(-1))) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +(1*signo).\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+(1*signo).\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +(1*signo).\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t((filaPieza =8 & signo=1) | (filaPieza =1 & signo =(-1)))ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:43',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno:=1.\r(color=(Color white))ifTrue: [ \r\tsigno:=-1.\r\t ].\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+(1*signo).\r\tfilaEscaqueMovDosPos := filaPieza+(2*signo).\r\t(((filaPieza<8) & (signo=1))|((filaPieza >1) & (signo=(-1)))) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +(1*signo).\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+(1*signo).\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +(1*signo).\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(((filaPieza =8) & (signo=1)) | ((filaPieza =1) & (signo =(-1))))ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:44',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:47:12.135534-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno:=1.\r(color=(Color white))ifTrue: [ \r\tsigno:=-1.\r\t ].\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+(1*signo).\r\tfilaEscaqueMovDosPos := filaPieza+(2*signo).\r\t(((filaPieza<8) & (signo=1))|((filaPieza >1) & (signo=(-1)))) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +(1*signo).\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+(1*signo).\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +(1*signo).\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(((filaPieza =8) & (signo=1)) | ((filaPieza =1) & (signo =(-1))))ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:44',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno:=1.\r(color=(Color black))ifTrue: [ \r\tsigno:=-1.\r\t ].\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+(1*signo).\r\tfilaEscaqueMovDosPos := filaPieza+(2*signo).\r\t(((filaPieza<8) & (signo=1))|((filaPieza >1) & (signo=(-1)))) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +(1*signo).\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+(1*signo).\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +(1*signo).\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(((filaPieza =8) & (signo=1)) | ((filaPieza =1) & (signo =(-1))))ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:47',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:55:39.254534-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno:=1.\r(color=(Color black))ifTrue: [ \r\tsigno:=-1.\r\t ].\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+(1*signo).\r\tfilaEscaqueMovDosPos := filaPieza+(2*signo).\r\t(((filaPieza<8) & (signo=1))|((filaPieza >1) & (signo=(-1)))) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +(1*signo).\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+(1*signo).\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +(1*signo).\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(((filaPieza =8) & (signo=1)) | ((filaPieza =1) & (signo =(-1))))ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:47',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno:=1.\r(color=(Color black))ifTrue: [ \r\tsigno:=-1.\r\t ].\r\tfilaEscaqueMov:= filaPieza+(1*signo).\r\tfilaEscaqueMovDosPos := filaPieza+(2*signo).\r\t(((filaPieza<8) & (signo=1))|((filaPieza >1) & (signo=(-1)))) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +signo.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+signo.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +signo.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(((filaPieza =8) & (signo=1)) | ((filaPieza =1) & (signo =(-1))))ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r\r\r\r\t End of statement list encountered ->(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:55',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-08-17T17:56:46.352534-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno:=1.\r(color=(Color black))ifTrue: [ \r\tsigno:=-1.\r\t ].\r\tfilaEscaqueMov:= filaPieza+(1*signo).\r\tfilaEscaqueMovDosPos := filaPieza+(2*signo).\r\t(((filaPieza<8) & (signo=1))|((filaPieza >1) & (signo=(-1)))) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +signo.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+signo.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +signo.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(((filaPieza =8) & (signo=1)) | ((filaPieza =1) & (signo =(-1))))ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r\r\r\r\t End of statement list encountered ->(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:55',			#package : #'POO Tp obligatorio libre Ajedrez'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer signo|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\rsigno:=1.\r(color=(Color black))ifTrue: [ \r\tsigno:=-1.\r\t ].\r(color= (Color white))ifTrue: [(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t].\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t].\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 8/17/2019 17:56',			#package : #'POO Tp obligatorio libre Ajedrez'		}	}}