OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T16:22:42.471052-03:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-ccd1f64.b93dax9qiruxrzo855615ojm5', '36' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila >2)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo Arriba derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <7)& (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:22',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T16:25:31.960052-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila >2)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo Arriba derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <7)& (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:22',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila >2)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <7)& (contColumna >1)] ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna >1) ] ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:25',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T16:31:00.060052-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila >2)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <7)& (contColumna >1)] ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna >1) ] ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:25',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila <7)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <7)& (contColumna >1)] ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna >1) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna<7) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <7) & (continuar)] whileTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:30',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T16:33:34.430052-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila <7)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <7)& (contColumna >1)] ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna >1) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna<7) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <7) & (continuar)] whileTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:30',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila <7)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <7)& (contColumna >1)] ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna >1) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna<7) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <7) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>1)&(contColumna >2) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo izquierda arriba"\r\tcontFila:=contFila-1.\r\tcontColumna:= contColumna - 2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila <8)&(contColumna >2) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo izquierda abajo"\r\t\r\tcontFila := contFila+1.\r\tcontColumna:= contColumna -2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:33',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T16:36:53.976052-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila <7)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <7)& (contColumna >1)] ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna <8) ] ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>2)&(contColumna >1) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna<7) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <7) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila>1)&(contColumna >2) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo izquierda arriba"\r\tcontFila:=contFila-1.\r\tcontColumna:= contColumna - 2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila <8)&(contColumna >2) & (continuar)] ifTrue: [ "verifico escaques desde pos caballo izquierda abajo"\r\t\r\tcontFila := contFila+1.\r\tcontColumna:= contColumna -2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:33',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r( (contFila <7)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <7)& (contColumna >1)) ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna >1) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila >1)&(contColumna<7) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <8)&(contColumna <7) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>1)&(contColumna >2) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo izquierda arriba"\r\tcontFila:=contFila-1.\r\tcontColumna:= contColumna - 2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r( (contFila <8)&(contColumna >2) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo izquierda abajo"\r\t\r\tcontFila := contFila+1.\r\tcontColumna:= contColumna -2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:36',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T16:41:53.207052-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r( (contFila <7)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <7)& (contColumna >1)) ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna >1) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila >1)&(contColumna<7) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <8)&(contColumna <7) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>1)&(contColumna >2) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo izquierda arriba"\r\tcontFila:=contFila-1.\r\tcontColumna:= contColumna - 2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r( (contFila <8)&(contColumna >2) & (continuar)) ifTrue: [ "verifico escaques desde pos caballo izquierda abajo"\r\t\r\tcontFila := contFila+1.\r\tcontColumna:= contColumna -2.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:36',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r( (contFila <7)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <7)& (contColumna >1)) ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna >1)) ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila >1)&(contColumna<7)) ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <8)&(contColumna <7)) ifTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>1)&(contColumna >2)) ifTrue: [ "verifico escaques desde pos caballo izquierda arriba"\r\tcontFila:=contFila-1.\r\tcontColumna:= contColumna - 2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r( (contFila <8)&(contColumna >2)) ifTrue: [ "verifico escaques desde pos caballo izquierda abajo"\r\t\r\tcontFila := contFila+1.\r\tcontColumna:= contColumna -2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:41',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:07:36.255052-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar escaqueMov|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r(color= Color white)ifTrue: [\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+2) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t]\r\t\r\t].\r(color= Color black)ifTrue: [ \r\t\r\t ]\r\r End of statement list encountered ->[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:07',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:07:56.079052-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar escaqueMov|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r(color= Color white)ifTrue: [\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+2) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t]\r\t\r\t].\r(color= Color black)ifTrue: [ \r\t\r\t ]\r\r End of statement list encountered ->[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:07',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar escaqueMov|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r(color= Color white)ifTrue: [\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+2) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t].\r\t\r\t].\r(color= Color black)ifTrue: [ \r\t\r\t ]\r\r End of statement list encountered ->[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:07',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:08:43.896052-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar escaqueMov|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r(color= Color white)ifTrue: [\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+2) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t].\r\t\r\t].\r(color= Color black)ifTrue: [ \r\t\r\t ]\r\r End of statement list encountered ->[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:07',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar escaqueMov|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r(color= Color white)ifTrue: [\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+2) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t].\r\t].\r\r(color= Color black)ifTrue: [ \r\t\r\t ].\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:08',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:09:45.242052-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar escaqueMov|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r(color= Color white)ifTrue: [\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+2) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t].\r\t].\r\r(color= Color black)ifTrue: [ \r\t\r\t ].\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:08',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov|\r\r\r(color= Color white)ifTrue: [\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+2) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(filaPieza <8)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\t].\r\t\t].\r\t].\r\r(color= Color black)ifTrue: [ \r\t\r\t ].\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:09',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:18:34.161052-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov|\r\r\r(color= Color white)ifTrue: [\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+2) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(filaPieza <8)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaPieza+1) at: columnaPieza.\r\t\t\t].\r\t\t].\r\t].\r\r(color= Color black)ifTrue: [ \r\t\r\t ].\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:09',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos|\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t ].\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(filaPieza <8)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:18',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:29:00.218052-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos|\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t ].\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(filaPieza <8)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:18',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\t\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:29',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:30:55.290052-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\t\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:29',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:30',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:31:11.291052-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:30',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:31',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:33:15.795052-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Pieza subclass: #Peon\r\tinstanceVariableNames: \'primerMovimiento captura\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'POO Tp obligatorio libre 2\'',				#superclassName : 'Pieza'			},			#name : #Peon,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Peon,						#isMetaSide : false					},					#name : #primerMovimiento,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Peon,						#isMetaSide : false					},					#name : #captura,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Peon class\r\tinstanceVariableNames: \'\''				},				#name : #'Peon class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Peon,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'POO Tp obligatorio libre 2',			#package : #'POO Tp obligatorio libre 2',			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Pieza subclass: #Peon\r\tinstanceVariableNames: \'primerMovimiento\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'POO Tp obligatorio libre 2\'',				#superclassName : 'Pieza'			},			#name : #Peon,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Peon,						#isMetaSide : false					},					#name : #primerMovimiento,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Peon class\r\tinstanceVariableNames: \'\''				},				#name : #'Peon class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Peon,					#isMetaSide : false				},				#parent : @25,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'POO Tp obligatorio libre 2',			#package : #'POO Tp obligatorio libre 2',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:34:27.225052-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:31',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:34',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:37:24.463052-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= Color white)ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= Color black)ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:34',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:37',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:37:52.538052-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #Constructor,			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento := true.\rcaptura:= false.',			#stamp : 'Manuel 7/19/2019 16:00',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento := true.\rcaptura:= false.',			#stamp : 'Manuel 7/19/2019 16:00',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:37:52.539052-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #Constructor,			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento := true.\rcaptura:= false.',			#stamp : 'Manuel 7/19/2019 16:00',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:37:52.604052-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Pieza subclass: #Peon\r\tinstanceVariableNames: \'primerMovimiento\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'POO Tp obligatorio libre 2\'',				#superclassName : 'Pieza'			},			#name : #Peon,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Peon,						#isMetaSide : false					},					#name : #primerMovimiento,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Peon class\r\tinstanceVariableNames: \'\''				},				#name : #'Peon class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Peon,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'POO Tp obligatorio libre 2',			#package : #'POO Tp obligatorio libre 2',			#sharedPools : OrderedCollection [ ]		},		#protocol : #Constructor	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:37:56.684052-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento := true.',			#stamp : 'ManuelLatorre 7/28/2019 17:37',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:38:09.256052-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento := true.',			#stamp : 'ManuelLatorre 7/28/2019 17:37',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:38:17.533052-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento := true.',			#stamp : 'ManuelLatorre 7/28/2019 17:38',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:42:58.481052-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento := true.',			#stamp : 'ManuelLatorre 7/28/2019 17:38',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rprimerMovimiento := true.\rself initialize.\r',			#stamp : 'ManuelLatorre 7/28/2019 17:42',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:43:17.089052-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rprimerMovimiento := true.\rself initialize.\r',			#stamp : 'ManuelLatorre 7/28/2019 17:42',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\r',			#stamp : 'ManuelLatorre 7/28/2019 17:43',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:43:27.228052-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:37',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\rprimerMovimiento :=true.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:43',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:44:15.642052-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\rprimerMovimiento :=true.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:43',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:44',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:45:06.888052-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\r',			#stamp : 'ManuelLatorre 7/28/2019 17:43',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento :=true.',			#stamp : 'ManuelLatorre 7/28/2019 17:45',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:47:39.345052-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos .',			#stamp : 'ManuelLatorre 7/28/2019 17:44',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^primerMovimiento  .',			#stamp : 'ManuelLatorre 7/28/2019 17:47',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:48:12.944052-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^primerMovimiento  .',			#stamp : 'ManuelLatorre 7/28/2019 17:47',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:48',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:48:58.559052-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:48',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol esPrimerMovimiento|\rhaceMov:= false.\resPrimerMovimiento := primerMovimiento.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(esPrimerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:48',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:50:06.747052-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #getPrimerMovimiento,			#protocol : #'as yet unclassified',			#sourceCode : 'getPrimerMovimiento\r^primerMovimiento.',			#stamp : 'ManuelLatorre 7/28/2019 17:50',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:51:31.006052-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\rprimerMovimiento :=true.',			#stamp : 'ManuelLatorre 7/28/2019 17:45',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rprimerMovimiento :=true.\rself initialize.\r',			#stamp : 'ManuelLatorre 7/28/2019 17:51',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:52:28.394052-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'setPrimerMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'setPrimerMovimiento: unBool\rprimerMovimiento := unBool.',			#stamp : 'ManuelLatorre 7/28/2019 17:52',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:52:28.400052-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'setPrimerMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'setPrimerMovimiento: unBool\rprimerMovimiento := unBool.',			#stamp : 'ManuelLatorre 7/28/2019 17:52',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'setPrimerMovimiento:',			#protocol : #initialization,			#sourceCode : 'setPrimerMovimiento: unBool\rprimerMovimiento := unBool.',			#stamp : 'ManuelLatorre 7/28/2019 17:52',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:53:06.903052-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasBlancas:',			#protocol : #PiezasBlancas,			#sourceCode : 'crearPiezasBlancas: unTablero\r|miEscaque colPiezasBlancas|\rcolPiezasBlancas:= OrderedCollection new.\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 2 at: col.\r\t(miEscaque) setPieza:(Peon new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonBlanco. "Llamo un metodo para poder \tmodificar en el la direccion donde se encuentran las imagenes "\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 2."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: col.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."agrego y muestro el peon sobre el \tescaque"\r\t((miEscaque getPiezaEscaque) position: (miEscaque) position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t].\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 1 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 1.\t\r\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 1 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 2.\t\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 3.\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco . \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 6.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 5.\r\t(miEscaque) setPieza:(Dama new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasBlancas do: [:pieza| pieza color: Color white ].\r\t\r\t^colPiezasBlancas.',			#stamp : 'Manuel 7/26/2019 00:14',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasBlancas:',			#protocol : #PiezasBlancas,			#sourceCode : 'crearPiezasBlancas: unTablero\r|miEscaque colPiezasBlancas|\rcolPiezasBlancas:= OrderedCollection new.\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 2 at: col.\r\t(miEscaque) setPieza:(Peon new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonBlanco. "Llamo un metodo para poder \tmodificar en el la direccion donde se encuentran las imagenes "\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 2."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: col.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."agrego y muestro el peon sobre el \tescaque"\r\t((miEscaque getPiezaEscaque) position: (miEscaque) position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t((miEscaque getPiezaEscaque)setPrimerMovimiento: true).\r\t].\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 1 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 1.\t\r\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 1 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 2.\t\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 3.\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco . \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 6.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 5.\r\t(miEscaque) setPieza:(Dama new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasBlancas do: [:pieza| pieza color: Color white ].\r\t\r\t^colPiezasBlancas.',			#stamp : 'ManuelLatorre 7/28/2019 17:53',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:53:20.336052-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasNegras:',			#protocol : #PiezasNegras,			#sourceCode : 'crearPiezasNegras: unTablero\r|miEscaque colPiezasNegras|\rcolPiezasNegras := OrderedCollection new.\r\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 7 at: col.\r\t(miEscaque) setPieza:(Peon new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonNegro.\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 7."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: col.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el peon sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position).\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t]."Lo ubico en el escaque"\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 8 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreNegra. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 1.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreNegra. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 8 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 2.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 3.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 6.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 5.\r\t(miEscaque) setPieza:(Dama new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaNegra.\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasNegras do:[:pieza|pieza color: Color black].\r\t\r^colPiezasNegras.',			#stamp : 'Manuel 7/25/2019 14:37',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasNegras:',			#protocol : #PiezasNegras,			#sourceCode : 'crearPiezasNegras: unTablero\r|miEscaque colPiezasNegras|\rcolPiezasNegras := OrderedCollection new.\r\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 7 at: col.\r\t(miEscaque) setPieza:(Peon new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonNegro.\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 7."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: col.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el peon sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position).\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t((miEscaque getPiezaEscaque)setPrimerMovimiento: true).\r\t]."Lo ubico en el escaque"\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 8 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreNegra. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 1.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreNegra. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 8 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 2.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 3.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 6.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 5.\r\t(miEscaque) setPieza:(Dama new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaNegra.\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasNegras do:[:pieza|pieza color: Color black].\r\t\r^colPiezasNegras.',			#stamp : 'ManuelLatorre 7/28/2019 17:53',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:53:56.728052-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rprimerMovimiento :=true.\rself initialize.\r',			#stamp : 'ManuelLatorre 7/28/2019 17:51',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #inicializarPeon,			#protocol : #'as yet unclassified',			#sourceCode : 'inicializarPeon\rself initialize.\r',			#stamp : 'ManuelLatorre 7/28/2019 17:53',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:54:19.226052-03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol esPrimerMovimiento|\rhaceMov:= false.\resPrimerMovimiento := primerMovimiento.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(esPrimerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:48',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:54',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T17:59:29.391052-03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:54',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:59',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T18:01:11.689052-03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 17:59',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tself verificarEscaqueEnFila: filaEscaqueMov enColumna:columnaPieza enTablero: unTablero.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:01',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T18:02:25.629052-03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tself verificarEscaqueEnFila: filaEscaqueMov enColumna:columnaPieza enTablero: unTablero.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:01',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:02',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T18:03:36.486052-03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:02',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:03',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T18:05:04.741052-03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:03',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:05',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T18:06:57.087052-03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t].\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeDerCol enTablero: unTablero.\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:05',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t].\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:06',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T18:09:17.493052-03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t].\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:06',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t].\r\t\t\r\t\t\r\t\t((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:09',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-28T18:12:10.562052-03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t\t\t].\r\t\t\r\t\t\r\t\t((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:09',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t\r\t((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:12',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T14:58:02.997052-03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t\r\t((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 18:12',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t(piezaAComer)ifNotNil:[\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t  piezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 14:58',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:00:51.822052-03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t(piezaAComer)ifNotNil:[\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t  piezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 14:58',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\r\t\t\t(piezaAComer)ifNotNil:[\r\t\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t\t].\r\t\t].\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t  \t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t\r\t\t\t(piezaAComer)ifNotNil:[\r\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t\t].\r\t\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:00',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:03:56.976052-03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\r\t\t\t(piezaAComer)ifNotNil:[\r\t\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t\t].\r\t\t].\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t  \t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t\r\t\t\t(piezaAComer)ifNotNil:[\r\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t\t].\r\t\t].\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:00',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\tpiezaAComer := nil.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t].\r\t\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t   piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t].\r\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:03',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:06:56.252052-03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\tpiezaAComer := nil.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t].\r\t\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t   piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t].\r\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:03',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)&(columnaPieza <8)&(columnaPieza >1)) ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\tpiezaAComer := nil.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t].\r\t\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t   piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t].\r\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:06',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:07:50.180052-03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)&(columnaPieza <8)&(columnaPieza >1)) ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\tpiezaAComer := nil.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t].\r\t\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t   piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t].\r\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:06',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\tpiezaAComer := nil.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t].\r\t\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t   piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t].\r\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:07',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:21:20.258052-03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\tpiezaAComer := nil.\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeIzqCol)ifNotNil:[\r\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t].\r\t\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t\t\r\t\t\r\t\t(unTablero escaqueAt: comeFila at: comeDerCol)ifNotNil:[\r\t   piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t].\r\t\r\t\t(piezaAComer)ifNotNil:[\r\t\tself verificarEscaqueEnFila: comeFila enColumna:comeIzqCol  enTablero: unTablero.\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:07',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(comeIzqCol )ifNil: [ \r\t\t\t self verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t(comeDerCol)ifNil: [ \r\t\t\t self verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\r\t\t\r\t\t((comeIzqCol) & (comeDerCol))ifNotNil: [ \r\t\t\t self verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t self verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:21',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:26:01.635052-03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(comeIzqCol )ifNil: [ \r\t\t\t self verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t(comeDerCol)ifNil: [ \r\t\t\t self verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\r\t\t\r\t\t((comeIzqCol) & (comeDerCol))ifNotNil: [ \r\t\t\t self verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t self verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:21',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(comeIzqCol )ifNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeDerCol)ifNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\t\t((comeIzqCol) & (comeDerCol))ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t \t(piezaAComer)ifNotNil: [ \r\t\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t \t].\r\t\t\r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t \t].\r\t\t\t\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:26',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:30:03.628052-03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t].\r\t].\r\t\t\r\t\t(comeIzqCol )ifNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeDerCol)ifNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\t\t((comeIzqCol) & (comeDerCol))ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t \t(piezaAComer)ifNotNil: [ \r\t\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t \t].\r\t\t\r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t \t].\r\t\t\t\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:26',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeIzqCol)ifNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeDerCol)ifNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\t\t((comeIzqCol) & (comeDerCol))ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t \t(piezaAComer)ifNotNil: [ \r\t\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t \t].\r\t\t\r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t \t].\r\t\t\t\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:30',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:31:18.118052-03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeIzqCol)ifNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeDerCol)ifNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\t\t((comeIzqCol) & (comeDerCol))ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t \t(piezaAComer)ifNotNil: [ \r\t\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t \t].\r\t\t\r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t \t].\r\t\t\t\r\t\t].\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:30',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeIzqCol)ifNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeDerCol)ifNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:31',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:33:23.724052-03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeIzqCol)ifNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeDerCol)ifNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:31',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:33',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:36:16.118052-03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\tpiezaAComer := nil.\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:33',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:36',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:42:32.482052-03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t((filaPieza<8) &(filaPieza>1)) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\r\t\r\t\r\t].\r\r(color= (Color black))ifTrue: [ \r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t ].\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:36',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:42',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:43:50.080052-03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t(columnaPieza>1 & columnaPieza<8)ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:42',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:43',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:54:50.871052-03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:43',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(filaPieza =8)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:54',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T15:55:54.019052-03:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(filaPieza =8)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:54',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(filaPieza =8)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\t].\r\t(filaPieza =1)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:10:30.509052-03:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #'setFilaEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'setFilaEscaque: unaFila\rfilaEscaque := unaFila',			#stamp : 'ManuelLatorre 7/29/2019 16:10',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:10:30.520052-03:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #'setFilaEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'setFilaEscaque: unaFila\rfilaEscaque := unaFila',			#stamp : 'ManuelLatorre 7/29/2019 16:10',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #'setFilaEscaque:',			#protocol : #initialization,			#sourceCode : 'setFilaEscaque: unaFila\rfilaEscaque := unaFila',			#stamp : 'ManuelLatorre 7/29/2019 16:10',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:10:48.384052-03:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #'setColumnaEscaque:',			#protocol : #initialization,			#sourceCode : 'setColumnaEscaque: unaColumna\rcolumnaEscaque := unaColumna.',			#stamp : 'ManuelLatorre 7/29/2019 16:10',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:11:12.185052-03:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'newCellAt:at:',			#protocol : #'instance creation',			#sourceCode : 'newCellAt: i at:j \r|c origin|\rc:= Escaque new.\rorigin:= self innerBounds origin.\rself addMorph: c.\rc position: ((i-1)*c width) @ ((j-1)*c height )+ origin.\r^c.',			#stamp : 'Manuel 7/18/2019 17:08',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'newCellAt:at:',			#protocol : #'instance creation',			#sourceCode : 'newCellAt: i at:j \r|c origin|\rc:= Escaque new.\rc setFilaEscaque: i.\rc setColumnaEscaque: j.\rorigin:= self innerBounds origin.\rself addMorph: c.\rc position: ((i-1)*c width) @ ((j-1)*c height )+ origin.\r^c.',			#stamp : 'ManuelLatorre 7/29/2019 16:11',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:12:11.042052-03:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'newCellAt:at:',			#protocol : #'instance creation',			#sourceCode : 'newCellAt: i at:j \r|c origin|\rc:= Escaque new.\rc setFilaEscaque: i.\rc setColumnaEscaque: j.\rorigin:= self innerBounds origin.\rself addMorph: c.\rc position: ((i-1)*c width) @ ((j-1)*c height )+ origin.\r^c.',			#stamp : 'ManuelLatorre 7/29/2019 16:11',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'newCellAt:at:',			#protocol : #'instance creation',			#sourceCode : 'newCellAt: i at:j \r|c origin|\rc:= Escaque new.\rc setFilaEscaque: j.\rc setColumnaEscaque: i.\rorigin:= self innerBounds origin.\rself addMorph: c.\rc position: ((i-1)*c width) @ ((j-1)*c height )+ origin.\r^c.',			#stamp : 'ManuelLatorre 7/29/2019 16:12',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:14:19.102052-03:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #getFilaEscaque,			#protocol : #'as yet unclassified',			#sourceCode : 'getFilaEscaque\r^filaEscaque ',			#stamp : 'ManuelLatorre 7/29/2019 16:14',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:14:39.943052-03:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #getColumnaEscaque,			#protocol : #'as yet unclassified',			#sourceCode : 'getColumnaEscaque\r^columnaEscaque',			#stamp : 'ManuelLatorre 7/29/2019 16:14',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:18:34.140052-03:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec|\rerror:=true.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r].\r\r\r"escaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rpiezaSelec posiblesMov: unTablero."\r"piezaSelec(posibles movimientos)"\r\r',			#stamp : 'Manuel 7/25/2019 17:16',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r].\r\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rpiezaSelec posiblesMov: unTablero.\r\r\r',			#stamp : 'ManuelLatorre 7/29/2019 16:18',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:18:48.323052-03:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r].\r\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rpiezaSelec posiblesMov: unTablero.\r\r\r',			#stamp : 'ManuelLatorre 7/29/2019 16:18',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r].\r\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r\r',			#stamp : 'ManuelLatorre 7/29/2019 16:18',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:20:22.034052-03:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos',			#stamp : 'ManuelLatorre 7/29/2019 16:20',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:31:40.859052-03:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos',			#stamp : 'ManuelLatorre 7/29/2019 16:20',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu|\rmenu:= UIManager default\rchooseFrom: unaColPosiblesMovimientos\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 16:31',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:33:12.215052-03:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu|\rmenu:= UIManager default\rchooseFrom: unaColPosiblesMovimientos\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 16:31',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'hola\'\'que\'\'tal\')\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 16:33',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:33:33.473052-03:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r].\r\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r\r',			#stamp : 'ManuelLatorre 7/29/2019 16:18',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r].\r\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/29/2019 16:33',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T16:34:01.029052-03:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'hola\'\'que\'\'tal\')\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 16:33',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu|\rmenu:= UIManager default\rchooseFrom: unaColPosiblesMovimientos\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 16:34',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:29:16.553052-03:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu|\rmenu:= UIManager default\rchooseFrom: unaColPosiblesMovimientos\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 16:34',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:(\'\',escaqueMov  getFilaEscaque,\'\',escaqueMov getColumnaEscaque) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings \rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:29',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:30:11.966052-03:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:(\'\',escaqueMov  getFilaEscaque,\'\',escaqueMov getColumnaEscaque) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings \rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:29',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:(escaqueMov  getFilaEscaque asString,escaqueMov getColumnaEscaque asString) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:30',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:30:30.021052-03:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:(escaqueMov  getFilaEscaque asString,escaqueMov getColumnaEscaque asString) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:30',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:(escaqueMov  getFilaEscaque asString,\'\',escaqueMov getColumnaEscaque asString) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:30',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:31:15.654052-03:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:(escaqueMov  getFilaEscaque asString,\'\',escaqueMov getColumnaEscaque asString) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:30',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:(escaqueMov  getFilaEscaque asString,escaqueMov getColumnaEscaque asString) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:31',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:33:13.021052-03:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:(escaqueMov  getFilaEscaque asString,escaqueMov getColumnaEscaque asString) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:31',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:((escaqueMov  getFilaEscaque asString),(escaqueMov getColumnaEscaque asString)) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:33',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:33:42.387052-03:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcolPosMoviStrings add:((escaqueMov  getFilaEscaque asString),(escaqueMov getColumnaEscaque asString)) \r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:33',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings cadena|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcadena:=(escaqueMov  getFilaEscaque asString),(escaqueMov getColumnaEscaque asString).\r\tcolPosMoviStrings add:(cadena).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:33',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:34:26.487052-03:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings cadena|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcadena:=(escaqueMov  getFilaEscaque asString),(escaqueMov getColumnaEscaque asString).\r\tcolPosMoviStrings add:(cadena).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:33',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings cadena|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcadena:=((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaque) asString).\r\tcolPosMoviStrings add:(cadena).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:34',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:44:17.059052-03:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings cadena|\rcolPosMoviStrings :=OrderedCollection.\runaColPosiblesMovimientos do:[:escaqueMov|\r\tcadena:=((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaque) asString).\r\tcolPosMoviStrings add:(cadena).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:34',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings cadena|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaque) asString).\r\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:44',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:45:07.078052-03:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Jugador\r\tinstanceVariableNames: \'color colPiezas tablero rendicion tablas tiempo\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'POO Tp obligatorio libre 2\'',				#superclassName : 'Object'			},			#name : #Jugador,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #colPiezas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tablero,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #rendicion,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tablas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tiempo,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Jugador class\r\tinstanceVariableNames: \'\''				},				#name : #'Jugador class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Jugador,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'POO Tp obligatorio libre 2',			#package : #'POO Tp obligatorio libre 2',			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Jugador\r\tinstanceVariableNames: \'color colPiezas tablero rendicion tablas tiempo colPosMoviString\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'POO Tp obligatorio libre 2\'',				#superclassName : 'Object'			},			#name : #Jugador,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #color,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #colPiezas,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tablero,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #rendicion,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tablas,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tiempo,					#parent : @33				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #colPosMoviString,					#parent : @33				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Jugador class\r\tinstanceVariableNames: \'\''				},				#name : #'Jugador class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @33			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Jugador,					#isMetaSide : false				},				#parent : @33,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'POO Tp obligatorio libre 2',			#package : #'POO Tp obligatorio libre 2',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:45:07.217052-03:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings cadena|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaque) asString).\r\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:44',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaque) asString).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviString\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:45',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:45:18.746052-03:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Jugador\r\tinstanceVariableNames: \'color colPiezas tablero rendicion tablas tiempo colPosMoviString\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'POO Tp obligatorio libre 2\'',				#superclassName : 'Object'			},			#name : #Jugador,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #colPiezas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tablero,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #rendicion,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tablas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tiempo,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #colPosMoviString,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Jugador class\r\tinstanceVariableNames: \'\''				},				#name : #'Jugador class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Jugador,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'POO Tp obligatorio libre 2',			#package : #'POO Tp obligatorio libre 2',			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Jugador\r\tinstanceVariableNames: \'color colPiezas tablero rendicion tablas tiempo\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'POO Tp obligatorio libre 2\'',				#superclassName : 'Object'			},			#name : #Jugador,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #color,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #colPiezas,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tablero,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #rendicion,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tablas,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #tiempo,					#parent : @35				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Jugador class\r\tinstanceVariableNames: \'\''				},				#name : #'Jugador class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @35			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Jugador,					#isMetaSide : false				},				#parent : @35,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'POO Tp obligatorio libre 2',			#package : #'POO Tp obligatorio libre 2',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:45:37.335052-03:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaque) asString).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviString\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:45',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaque) asString).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:45',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:48:15.319052-03:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #getColumnaEscaqueString,			#protocol : #'as yet unclassified',			#sourceCode : 'getColumnaEscaqueString\r|columnaEscaqueCadena|\r(columnaEscaque =1)ifTrue: [ columnaEscaqueCadena :=\'A\' ].\r(columnaEscaque =2)ifTrue: [ columnaEscaqueCadena :=\'B\' ].\r(columnaEscaque =3)ifTrue: [ columnaEscaqueCadena :=\'C\' ].\r(columnaEscaque =4)ifTrue: [ columnaEscaqueCadena :=\'D\' ].\r(columnaEscaque =5)ifTrue: [ columnaEscaqueCadena :=\'E\' ].\r(columnaEscaque =6)ifTrue: [ columnaEscaqueCadena :=\'F\' ].\r(columnaEscaque =7)ifTrue: [ columnaEscaqueCadena :=\'G\' ].\r(columnaEscaque =8)ifTrue: [ columnaEscaqueCadena :=\'H\' ].\r\r^columnaEscaqueCadena.',			#stamp : 'ManuelLatorre 7/29/2019 17:48',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:48:34.228052-03:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #getColumnaEscaqueString,			#protocol : #'as yet unclassified',			#sourceCode : 'getColumnaEscaqueString\r|columnaEscaqueCadena|\r(columnaEscaque =1)ifTrue: [ columnaEscaqueCadena :=\'A\' ].\r(columnaEscaque =2)ifTrue: [ columnaEscaqueCadena :=\'B\' ].\r(columnaEscaque =3)ifTrue: [ columnaEscaqueCadena :=\'C\' ].\r(columnaEscaque =4)ifTrue: [ columnaEscaqueCadena :=\'D\' ].\r(columnaEscaque =5)ifTrue: [ columnaEscaqueCadena :=\'E\' ].\r(columnaEscaque =6)ifTrue: [ columnaEscaqueCadena :=\'F\' ].\r(columnaEscaque =7)ifTrue: [ columnaEscaqueCadena :=\'G\' ].\r(columnaEscaque =8)ifTrue: [ columnaEscaqueCadena :=\'H\' ].\r\r^columnaEscaqueCadena.',			#stamp : 'ManuelLatorre 7/29/2019 17:48',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Escaque,				#isMetaSide : false			},			#name : #getColumnaEscaqueString,			#protocol : #'as yet unclassified',			#sourceCode : 'getColumnaEscaqueString "devuelvo el escaque como letra para menu"\r|columnaEscaqueCadena|\r(columnaEscaque =1)ifTrue: [ columnaEscaqueCadena :=\'A\' ].\r(columnaEscaque =2)ifTrue: [ columnaEscaqueCadena :=\'B\' ].\r(columnaEscaque =3)ifTrue: [ columnaEscaqueCadena :=\'C\' ].\r(columnaEscaque =4)ifTrue: [ columnaEscaqueCadena :=\'D\' ].\r(columnaEscaque =5)ifTrue: [ columnaEscaqueCadena :=\'E\' ].\r(columnaEscaque =6)ifTrue: [ columnaEscaqueCadena :=\'F\' ].\r(columnaEscaque =7)ifTrue: [ columnaEscaqueCadena :=\'G\' ].\r(columnaEscaque =8)ifTrue: [ columnaEscaqueCadena :=\'H\' ].\r\r^columnaEscaqueCadena.',			#stamp : 'ManuelLatorre 7/29/2019 17:48',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:49:03.862052-03:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaque) asString).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:45',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString) asString).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:49',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:49:10.994052-03:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString) asString).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:49',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:49',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:49:35.751052-03:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:49',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:49',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-29T17:51:05.350052-03:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t].\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:49',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:51',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:19:46.315052-03:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r].\r\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/29/2019 16:33',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r(posiblesMovimientos at:1)ifNil: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\r\terror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:19',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:27:26.187052-03:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r(posiblesMovimientos at:1)ifNil: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\r\terror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:19',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r((posiblesMovimientos size)=0)ifNil: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:27',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:28:17.510052-03:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r((posiblesMovimientos size)=0)ifNil: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:27',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r((posiblesMovimientos) isEmpty)ifNil: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:28',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:29:49.600052-03:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r((posiblesMovimientos) isEmpty)ifNil: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:28',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:29',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:34:15.957052-03:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna piezas correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:29',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:34',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:35:45.255052-03:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:34',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifTrue: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:35',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:36:18.944052-03:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifTrue: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:35',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:36',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:37:52.625052-03:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\r\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:36',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:37',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:45:01.756052-03:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.',			#stamp : 'ManuelLatorre 7/29/2019 17:51',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\rescaqueSelecMov := colPosMoviStrings menu.',			#stamp : 'ManuelLatorre 7/30/2019 15:45',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:50:29.438052-03:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rself menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:37',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:50',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:50:39.846052-03:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\rescaqueSelecMov := colPosMoviStrings menu.',			#stamp : 'ManuelLatorre 7/30/2019 15:45',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\r^escaqueSelecMov := colPosMoviStrings menu.',			#stamp : 'ManuelLatorre 7/30/2019 15:50',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:54:20.108052-03:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\t(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum enTablero: tablero ."Envio numero de jugador en turno para indicarlo en el menu".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' \t\t\ttitle: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'Manuel 7/25/2019 16:38',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\t(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum enTablero: tablero ."Envio numero de jugador en turno para indicarlo en el menu".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 15:54',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:55:03.839052-03:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: unTablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'Manuel 7/25/2019 15:06',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rtablero:= unTablero.\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: unTablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:55:22.056052-03:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rtablero:= unTablero.\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: unTablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rtablero:= unTablero.\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:55:40.771052-03:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rtablero:= unTablero.\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: unTablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:56:21.677052-03:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: tablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:56',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:56:57.578052-03:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: unTablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: unTablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:56:57.579052-03:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador enTablero:unTablero\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: unTablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:57:11.360052-03:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador enTablero: tablero ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:56',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:57',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:57:35.183052-03:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: tablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:57',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:57:42.323052-03:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:50',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:50',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:57:42.324052-03:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:enTablero:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador enTablero: unTablero\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: unTablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:50',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T15:58:47.068052-03:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\t(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum enTablero: tablero ."Envio numero de jugador en turno para indicarlo en el menu".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 15:54',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\t(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 15:58',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:00:58.659052-03:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\r^escaqueSelecMov := colPosMoviStrings menu.',			#stamp : 'ManuelLatorre 7/30/2019 15:50',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #Menu,			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\r^escaqueSelecMov := colPosMoviStrings menu.',			#stamp : 'ManuelLatorre 7/30/2019 15:50',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:01:08.504052-03:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #Menu,			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\r^escaqueSelecMov := colPosMoviStrings menu.',			#stamp : 'ManuelLatorre 7/30/2019 15:50',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #Menu,			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\r^escaqueSelecMov := colPosMoviStrings at:menu.',			#stamp : 'ManuelLatorre 7/30/2019 16:01',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:16:45.951052-03:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r[ (contFila >1) ] ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r[ (contFila <8) ] ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r[ (contColumna >1) ] ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contColumna <8) ] ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1)] ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna<8)] ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.',			#stamp : 'ManuelLatorre 7/30/2019 16:16',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:17:19.735052-03:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r[ (contFila >1) ] ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r[ (contFila <8) ] ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r[ (contColumna >1) ] ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contColumna <8) ] ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1)] ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna<8)] ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.',			#stamp : 'ManuelLatorre 7/30/2019 16:16',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r[ (contFila <8) ] ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r[ (contColumna >1) ] ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contColumna <8) ] ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1)] ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna<8)] ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.',			#stamp : 'ManuelLatorre 7/30/2019 16:17',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:19:05.164052-03:00' ],		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r[ (contFila <8) ] ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r[ (contColumna >1) ] ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contColumna <8) ] ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1)] ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna<8)] ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.',			#stamp : 'ManuelLatorre 7/30/2019 16:17',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna>8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.',			#stamp : 'ManuelLatorre 7/30/2019 16:19',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:20:38.423052-03:00' ],		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna>8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.',			#stamp : 'ManuelLatorre 7/30/2019 16:19',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo izquierda"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba derecha"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.',			#stamp : 'ManuelLatorre 7/30/2019 16:20',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:20:53.178052-03:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo izquierda"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba derecha"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.',			#stamp : 'ManuelLatorre 7/30/2019 16:20',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo izquierda"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba derecha"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 16:20',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:24:01.441052-03:00' ],		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo izquierda"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba derecha"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 16:20',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo izquierda"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila >1)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba derecha"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 16:24',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:32:52.341052-03:00' ],		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec aEscaque: escaqueSelecParaMov.',			#stamp : 'ManuelLatorre 7/30/2019 16:32',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:33:10.049052-03:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: tablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\r\r\r',			#stamp : 'ManuelLatorre 7/30/2019 15:57',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: tablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\rself jugadorHaceMovimiento: piezaSelec aEscaque: escaqueSelecParaMov.\r\r',			#stamp : 'ManuelLatorre 7/30/2019 16:33',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:39:31.830052-03:00' ],		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec aEscaque: escaqueSelecParaMov.',			#stamp : 'ManuelLatorre 7/30/2019 16:32',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec aEscaque: escaqueSelecParaMov.\rescaqueSelecParaMov setPieza: nil.\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:[\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec.\rescaqueSelecParaMov addMorph: (piezaSelec).\r(piezaSelec)position: escaqueSelecParaMov position.',			#stamp : 'ManuelLatorre 7/30/2019 16:39',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:41:49.451052-03:00' ],		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\rescaqueSelecParaMov setPieza: nil.\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:[\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec.\rescaqueSelecParaMov addMorph: (piezaSelec).\r(piezaSelec)position: escaqueSelecParaMov position.',			#stamp : 'ManuelLatorre 7/30/2019 16:41',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:41:51.572052-03:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: tablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\rself jugadorHaceMovimiento: piezaSelec aEscaque: escaqueSelecParaMov.\r\r',			#stamp : 'ManuelLatorre 7/30/2019 16:33',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: tablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\rself jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\r\r',			#stamp : 'ManuelLatorre 7/30/2019 16:41',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:43:21.049052-03:00' ],		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\rescaqueSelecParaMov setPieza: nil.\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:[\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec.\rescaqueSelecParaMov addMorph: (piezaSelec).\r(piezaSelec)position: escaqueSelecParaMov position.',			#stamp : 'ManuelLatorre 7/30/2019 16:41',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\rescaqueSelec setPieza: nil.\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:[\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec.\rescaqueSelecParaMov addMorph: (piezaSelec).\r(piezaSelec)position: escaqueSelecParaMov position.',			#stamp : 'ManuelLatorre 7/30/2019 16:43',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:47:19.952052-03:00' ],		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #Menu,			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\r^escaqueSelecMov := colPosMoviStrings at:menu.',			#stamp : 'ManuelLatorre 7/30/2019 16:01',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuJugadorElijeMovimiento:',			#protocol : #Menu,			#sourceCode : 'menuJugadorElijeMovimiento: unaColPosiblesMovimientos\r|menu colPosMoviStrings escaqueSelecMov|\rcolPosMoviStrings :=OrderedCollection.\rcolPosMoviStrings :=unaColPosiblesMovimientos collect:[:escaqueMov|\r\t((escaqueMov  getFilaEscaque) asString),((escaqueMov getColumnaEscaqueString)asString).\r\t]."HOY arreglar si pieza elegida esta tapada que large error"\rmenu:= UIManager default\rchooseFrom: colPosMoviStrings\rlines:#(1) message: \'Elija movimiento a realizar\'.\rescaqueSelecMov := unaColPosiblesMovimientos at:menu.\r^escaqueSelecMov',			#stamp : 'ManuelLatorre 7/30/2019 16:47',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:47:48.344052-03:00' ],		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec aEscaque: escaqueSelecParaMov.\rescaqueSelecParaMov setPieza: nil.\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:[\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec.\rescaqueSelecParaMov addMorph: (piezaSelec).\r(piezaSelec)position: escaqueSelecParaMov position.',			#stamp : 'ManuelLatorre 7/30/2019 16:39',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:52:29.249052-03:00' ],		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #'setColumnaPieza:',			#protocol : #Seters,			#sourceCode : 'setColumnaPieza: unaCol\rcolumnaPieza := unaCol.',			#stamp : 'ManuelLatorre 7/30/2019 16:52',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:52:37.446052-03:00' ],		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #'setColPieza:',			#protocol : #Seters,			#sourceCode : 'setColPieza: unaCol\rcolumnaPieza := unaCol.',			#stamp : 'Manuel 7/22/2019 16:39',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #'setColPieza:',			#protocol : #'as yet unclassified',			#sourceCode : 'setColPieza: unaCol\rcolumnaPieza := unaCol.',			#stamp : 'Manuel 7/22/2019 16:39',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:52:37.447052-03:00' ],		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pieza,				#isMetaSide : false			},			#name : #'setColPieza:',			#protocol : #Seters,			#sourceCode : 'setColPieza: unaCol\rcolumnaPieza := unaCol.',			#stamp : 'Manuel 7/22/2019 16:39',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:55:30.771052-03:00' ],		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\rescaqueSelec setPieza: nil.\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:[\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec.\rescaqueSelecParaMov addMorph: (piezaSelec).\r(piezaSelec)position: escaqueSelecParaMov position.',			#stamp : 'ManuelLatorre 7/30/2019 16:44',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\rescaqueSelec setPieza: nil. "indico que el viejo escaque esta vacio ahora"\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:["si el nuevo escaque tiene una pieza elimino el morph e indico que esta vacio para agregar la nueva pieza"\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec."agrego la nueva pieza al escaque"\rpiezaSelec setFilaPieza: (escaqueSelecParaMov getFilaEscaque )."seteo nueva fila y columna de la pieza"\rpiezaSelec setColumnaPieza: (escaqueSelecParaMov getColumnaEscaque ).\rescaqueSelecParaMov addMorph: (piezaSelec)."Indico que el escaque ahora posee la imagen de la pieza (para que se vea la imagen de la pieza sobre la imagen)"\r(piezaSelec)position: escaqueSelecParaMov position."ubico la imagen"',			#stamp : 'ManuelLatorre 7/30/2019 16:55',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T16:58:49.484052-03:00' ],		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasBlancas:',			#protocol : #PiezasBlancas,			#sourceCode : 'crearPiezasBlancas: unTablero\r|miEscaque colPiezasBlancas|\rcolPiezasBlancas:= OrderedCollection new.\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 2 at: col.\r\t(miEscaque) setPieza:(Peon new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonBlanco. "Llamo un metodo para poder \tmodificar en el la direccion donde se encuentran las imagenes "\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 2."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: col.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."agrego y muestro el peon sobre el \tescaque"\r\t((miEscaque getPiezaEscaque) position: (miEscaque) position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t((miEscaque getPiezaEscaque)setPrimerMovimiento: true).\r\t].\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 1 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 1.\t\r\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 1 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 2.\t\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 3.\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco . \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 6.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 5.\r\t(miEscaque) setPieza:(Dama new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasBlancas do: [:pieza| pieza color: Color white ].\r\t\r\t^colPiezasBlancas.',			#stamp : 'ManuelLatorre 7/28/2019 17:53',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasBlancas:',			#protocol : #PiezasBlancas,			#sourceCode : 'crearPiezasBlancas: unTablero\r|miEscaque colPiezasBlancas|\rcolPiezasBlancas:= OrderedCollection new.\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 2 at: col.\r\t(miEscaque) setPieza:(Peon new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonBlanco. "Llamo un metodo para poder \tmodificar en el la direccion donde se encuentran las imagenes "\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 2."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: col.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."agrego y muestro el peon sobre el \tescaque"\r\t((miEscaque getPiezaEscaque) position: (miEscaque) position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t((miEscaque getPiezaEscaque)setPrimerMovimiento: true).\r\t].\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 1 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 1.\t\r\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 1 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 2.\t\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 3.\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco . \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 6.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 5.\r\t(miEscaque) setPieza:(Dama new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasBlancas do: [:pieza| pieza color: Color white ].\r\t\r\t^colPiezasBlancas.',			#stamp : 'ManuelLatorre 7/30/2019 16:58',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:00:12.949052-03:00' ],		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasNegras:',			#protocol : #PiezasNegras,			#sourceCode : 'crearPiezasNegras: unTablero\r|miEscaque colPiezasNegras|\rcolPiezasNegras := OrderedCollection new.\r\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 7 at: col.\r\t(miEscaque) setPieza:(Peon new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonNegro.\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 7."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: col.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el peon sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position).\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t((miEscaque getPiezaEscaque)setPrimerMovimiento: true).\r\t]."Lo ubico en el escaque"\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 8 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreNegra. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 1.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreNegra. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 8 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 2.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 3.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 6.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 5.\r\t(miEscaque) setPieza:(Dama new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaNegra.\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasNegras do:[:pieza|pieza color: Color black].\r\t\r^colPiezasNegras.',			#stamp : 'ManuelLatorre 7/28/2019 17:53',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasNegras:',			#protocol : #PiezasNegras,			#sourceCode : 'crearPiezasNegras: unTablero\r|miEscaque colPiezasNegras|\rcolPiezasNegras := OrderedCollection new.\r\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 7 at: col.\r\t(miEscaque) setPieza:(Peon new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonNegro.\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 7."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: col.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el peon sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position).\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t((miEscaque getPiezaEscaque)setPrimerMovimiento: true).\r\t]."Lo ubico en el escaque"\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 8 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreNegra. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 1.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreNegra. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 8 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 2.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 3.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 6.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 5.\r\t(miEscaque) setPieza:(Dama new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaNegra.\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 8 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyNegro. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 8."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasNegras add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasNegras do:[:pieza|pieza color: Color black].\r\t\r^colPiezasNegras.',			#stamp : 'ManuelLatorre 7/30/2019 17:00',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:11:53.661052-03:00' ],		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Alfil,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 15:23',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Alfil,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rcolPosiblesMovimientos reset.\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Alfil hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:11',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:12:34.353052-03:00' ],		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r( (contFila <7)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <7)& (contColumna >1)) ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna >1)) ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila >1)&(contColumna<7)) ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <8)&(contColumna <7)) ifTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>1)&(contColumna >2)) ifTrue: [ "verifico escaques desde pos caballo izquierda arriba"\r\tcontFila:=contFila-1.\r\tcontColumna:= contColumna - 2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r( (contFila <8)&(contColumna >2)) ifTrue: [ "verifico escaques desde pos caballo izquierda abajo"\r\t\r\tcontFila := contFila+1.\r\tcontColumna:= contColumna -2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 16:41',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Caballo,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcolPosiblesMovimientos reset.\r\r( (contFila <7)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo abajo derecha"\r\tcontFila:= contFila + 2.\r\tcontColumna := contColumna +1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <7)& (contColumna >1)) ifTrue: [ "verifico escaques desde pos caballo abajo izquierda"\r\tcontFila:= contFila + 2.\r\tcontColumna :=contColumna-1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna <8) ) ifTrue: [ "verifico escaques desde pos caballo arriba derecha"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna + 1.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>2)&(contColumna >1)) ifTrue: [ "verifico escaques desde pos caballo arriba izquierda"\r\tcontFila:= contFila -2.\r\tcontColumna:= contColumna -1 .\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila >1)&(contColumna<7)) ifTrue: [ "verifico escaques desde pos caballo derecha arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila <8)&(contColumna <7)) ifTrue: [ "verifico escaques desde pos caballo derecha abajo"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r( (contFila>1)&(contColumna >2)) ifTrue: [ "verifico escaques desde pos caballo izquierda arriba"\r\tcontFila:=contFila-1.\r\tcontColumna:= contColumna - 2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r( (contFila <8)&(contColumna >2)) ifTrue: [ "verifico escaques desde pos caballo izquierda abajo"\r\t\r\tcontFila := contFila+1.\r\tcontColumna:= contColumna -2.\r\tself verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:12:38.369052-03:00' ],		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dama,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 15:41',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dama,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rcolPosiblesMovimientos reset.\r[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila >1)&(contColumna>1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 1 (diagonal izquierda hacia arriba"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila <8)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 8 columna 8 (diagonal derecha hacia abajo)"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\rcontColumna := columnaPieza.\r\r[ (contFila<8)&(contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta Fila 8 columna 1 (diagonal izquierda hacia abajo)"\r\tcontColumna:= contColumna - 1.\r\tcontFila:=contFila+1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\rcontFila := filaPieza.\r\r[ (contFila >1)&(contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos Dama hasta fila 1 columna 8 (Diagonal derecha hacia arriba)"\r\tcontColumna:= contColumna + 1.\r\tcontFila := contFila-1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:12:42.236052-03:00' ],		#prior : OmReference [ '142' ],		#self : OmReference [ '143' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(filaPieza =8)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\t].\r\t(filaPieza =1)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/29/2019 15:55',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(filaPieza =8)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\t].\r\t(filaPieza =1)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:12:47.367052-03:00' ],		#prior : OmReference [ '143' ],		#self : OmReference [ '144' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\r\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo izquierda"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila >1)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba derecha"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 16:24',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Rey,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcolPosiblesMovimientos reset.\r\r (contFila >1) ifTrue: [ "verifico escaque desde pos Rey hacia arriba"\r\tcontFila:= contFila - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila := filaPieza.\r\r\r(contFila <8)  ifTrue: [ "verifico escaque desde pos Rey hacia abajo"\r\tcontFila:= contFila + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontFila:=filaPieza.\r\r (contColumna >1) ifTrue: [ "verifico escaque desde pos Rey hacia izquierda"\r\tcontColumna:= contColumna - 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r(contColumna <8) ifTrue: [ "verifico escaque desde pos Rey hacia derecha"\r\tcontColumna:= contColumna + 1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\r\r((contFila >1)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba izquierda"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila <8)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo derecha"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila <8)&(contColumna>1)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal abajo izquierda"\r\tcontFila:= contFila + 1.\r\tcontColumna := contColumna -1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontColumna := columnaPieza.\rcontFila:=filaPieza.\r\r((contFila >1)&(contColumna<8)) ifTrue: [ "verifico escaque desde pos Rey hacia diagonal arriba derecha"\r\tcontFila:= contFila - 1.\r\tcontColumna := contColumna +1.\r   self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:12:53.077052-03:00' ],		#prior : OmReference [ '144' ],		#self : OmReference [ '145' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Torre,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\r\r[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/28/2019 15:09',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Torre,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|contFila contColumna continuar|\rcontFila:= filaPieza.\rcontColumna := columnaPieza.\rcontinuar:=true.\rcolPosiblesMovimientos reset.\r[ (contFila >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 1"\r\tcontFila:= contFila - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contFila <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta fila 8"\r\tcontFila:= contFila + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontFila := filaPieza.\r\r[ (contColumna >1) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 1"\r\tcontColumna:= contColumna - 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\rcontinuar:=true.\rcontColumna := columnaPieza.\r\r[ (contColumna <8) & (continuar)] whileTrue: [ "verifico escaques desde pos torre hasta columna 8"\r\tcontColumna:= contColumna + 1.\r\tcontinuar:= self verificarEscaqueEnFila: contFila enColumna: contColumna enTablero: unTablero.\r].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:19:21.823052-03:00' ],		#prior : OmReference [ '145' ],		#self : OmReference [ '146' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(filaPieza =8)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\t].\r\t(filaPieza =1)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\r\t\t\r\r\t].\r\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:12',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Peon,				#isMetaSide : false			},			#name : #'posiblesMov:',			#protocol : #'as yet unclassified',			#sourceCode : 'posiblesMov: unTablero\r|escaqueMov filaEscaqueMov filaEscaqueMovDosPos haceMov comeFila comeIzqCol comeDerCol piezaAComer|\rhaceMov:= false.\rcolPosiblesMovimientos reset.\r(color= (Color white))ifTrue: [\r\tfilaEscaqueMov:= filaPieza+1.\r\tfilaEscaqueMovDosPos := filaPieza+2.\r\t(filaPieza<8) ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza +1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza+1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza +1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t].\r\t(filaPieza =8)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r].\r\r(color= (Color black))ifTrue: [\r\tfilaEscaqueMov:= filaPieza-1.\r\tfilaEscaqueMovDosPos := filaPieza-2.\r\t(filaPieza>1)ifTrue: [ haceMov:=true ].\r\r\t\r\t(columnaPieza =1)ifTrue: [ \r\t\tcomeFila:= filaPieza -1.\r\t\tcomeDerCol := columnaPieza +1.\r\t\tcomeIzqCol :=nil.\r\t\t ].\r\t(columnaPieza =8)ifTrue: [ \r\t\tcomeFila :=filaPieza-1.\r\t\tcomeIzqCol:= columnaPieza -1.\r\t\tcomeDerCol :=nil.\r\t\t ].\r\t((columnaPieza>1) & (columnaPieza<8))ifTrue:[\r\tcomeFila:= filaPieza -1.\r\tcomeIzqCol := columnaPieza-1.\r\tcomeDerCol := columnaPieza +1.\r\t\t].\r\t(filaPieza =1)ifTrue: [ \r\t\tcomeDerCol :=nil.\r\t\tcomeIzqCol :=nil.\r\t\t ]\r\t].\r\r\r\r\t(primerMovimiento)ifTrue: [ \r\t\t\tescaqueMov := unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMovDosPos ) at: columnaPieza.\r\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t ].\r\t(primerMovimiento)ifFalse:[\r\t\t\t(haceMov)ifTrue: [ \r\t\t\t\tescaqueMov:= unTablero escaqueAt: (filaEscaqueMov) at: columnaPieza.\r\t\t\t\t(escaqueMov getPiezaEscaque)ifNil:[\r\t\t\t\t\tcolPosiblesMovimientos add: escaqueMov.\r\t\t\t\t].\r\t\t\t].\r\t\t\r\t\t(comeDerCol)ifNotNil: [ \r\t\t\t piezaAComer := ((unTablero escaqueAt: comeFila at: comeDerCol)getPiezaEscaque).\r\t\t\t (piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeDerCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t\r\t\t(comeIzqCol)ifNotNil: [ \r\t\t\tpiezaAComer := ((unTablero escaqueAt: comeFila at: comeIzqCol)getPiezaEscaque).\r\t\t\t(piezaAComer)ifNotNil: [ \r\t\t\t\t\tself verificarEscaqueEnFila: comeFila enColumna: comeIzqCol enTablero: unTablero.\r\t\t\t ].\r\t\t].\r\t].\rprimerMovimiento := false."Como si o si se va a realizar el movimiento lo seteo en false"\r^colPosiblesMovimientos.',			#stamp : 'ManuelLatorre 7/30/2019 17:19',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:55:44.145052-03:00' ],		#prior : OmReference [ '146' ],		#self : OmReference [ '147' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\rescaqueSelec setPieza: nil. "indico que el viejo escaque esta vacio ahora"\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:["si el nuevo escaque tiene una pieza elimino el morph e indico que esta vacio para agregar la nueva pieza"\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec."agrego la nueva pieza al escaque"\rpiezaSelec setFilaPieza: (escaqueSelecParaMov getFilaEscaque )."seteo nueva fila y columna de la pieza"\rpiezaSelec setColumnaPieza: (escaqueSelecParaMov getColumnaEscaque ).\rescaqueSelecParaMov addMorph: (piezaSelec)."Indico que el escaque ahora posee la imagen de la pieza (para que se vea la imagen de la pieza sobre la imagen)"\r(piezaSelec)position: escaqueSelecParaMov position."ubico la imagen"',			#stamp : 'ManuelLatorre 7/30/2019 17:34',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov\r|piezaComida|\rescaqueSelec setPieza: nil. "indico que el viejo escaque esta vacio ahora"\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:["si el nuevo escaque tiene una pieza elimino el morph e indico que esta vacio para agregar la nueva pieza"\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec."agrego la nueva pieza al escaque"\rpiezaSelec setFilaPieza: (escaqueSelecParaMov getFilaEscaque )."seteo nueva fila y columna de la pieza"\rpiezaSelec setColumnaPieza: (escaqueSelecParaMov getColumnaEscaque ).\rescaqueSelecParaMov addMorph: (piezaSelec)."Indico que el escaque ahora posee la imagen de la pieza (para que se vea la imagen de la pieza sobre la imagen)"\r(piezaSelec)position: escaqueSelecParaMov position."ubico la imagen"',			#stamp : 'ManuelLatorre 7/30/2019 17:55',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:56:43.043052-03:00' ],		#prior : OmReference [ '147' ],		#self : OmReference [ '148' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov\r|piezaComida|\rescaqueSelec setPieza: nil. "indico que el viejo escaque esta vacio ahora"\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:["si el nuevo escaque tiene una pieza elimino el morph e indico que esta vacio para agregar la nueva pieza"\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\r].\rescaqueSelecParaMov setPieza: piezaSelec."agrego la nueva pieza al escaque"\rpiezaSelec setFilaPieza: (escaqueSelecParaMov getFilaEscaque )."seteo nueva fila y columna de la pieza"\rpiezaSelec setColumnaPieza: (escaqueSelecParaMov getColumnaEscaque ).\rescaqueSelecParaMov addMorph: (piezaSelec)."Indico que el escaque ahora posee la imagen de la pieza (para que se vea la imagen de la pieza sobre la imagen)"\r(piezaSelec)position: escaqueSelecParaMov position."ubico la imagen"',			#stamp : 'ManuelLatorre 7/30/2019 17:55',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov\r|piezaComida|\rescaqueSelec setPieza: nil. "indico que el viejo escaque esta vacio ahora"\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:["si el nuevo escaque tiene una pieza elimino el morph e indico que esta vacio para agregar la nueva pieza"\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\rpiezaComida := (escaqueSelecParaMov getPiezaEscaque).\r].\rescaqueSelecParaMov setPieza: piezaSelec."agrego la nueva pieza al escaque"\rpiezaSelec setFilaPieza: (escaqueSelecParaMov getFilaEscaque )."seteo nueva fila y columna de la pieza"\rpiezaSelec setColumnaPieza: (escaqueSelecParaMov getColumnaEscaque ).\rescaqueSelecParaMov addMorph: (piezaSelec)."Indico que el escaque ahora posee la imagen de la pieza (para que se vea la imagen de la pieza sobre la imagen)"\r(piezaSelec)position: escaqueSelecParaMov position."ubico la imagen"\r^piezaComida.',			#stamp : 'ManuelLatorre 7/30/2019 17:56',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:57:28.976052-03:00' ],		#prior : OmReference [ '148' ],		#self : OmReference [ '149' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: tablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\rself jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\r\r',			#stamp : 'ManuelLatorre 7/30/2019 16:41',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuPidePiezaJugador:',			#protocol : #Menu,			#sourceCode : 'menuPidePiezaJugador: numeroJugador\r|filaSelec columnaSelec error escaqueSelec piezaSelec posiblesMovimientos escaqueSelecParaMov piezaComida|\rerror:=true.\rposiblesMovimientos := OrderedCollection new.\r[ error ]whileTrue:[\rfilaSelec :=(self cambioCharANumero: (UIManager default request:\'TURNO: Jugador \',numeroJugador asString,\'\r  Ingrese numero de fila\' initialAnswer: \'Numero de fila\'))."Como lo ingresado es un string lo convierto a entero(numero)"\rcolumnaSelec := (self cambioCharANumero: (UIManager default request:\'Ingrese letra de columna\' initialAnswer:\'Letra de columna\')) . "Ingresa letra y ya la transformo directamente a numero"\r\rerror:=false.\rcolPiezas detect: [ :pieza| pieza existePiezaEn: filaSelec unaColumna: columnaSelec ] ifNone:[error:=true].\r(error)ifTrue: [ UIManager default alert: \'La posicion ingresada no es valida o no contiene ninguna pieza correspondiente al jugador. Por favor ingrese una fila y columna validas\' title: \'ERROR\' ].\r\r(error)ifFalse: [ \rescaqueSelec:= (tablero escaqueAt: filaSelec at: columnaSelec).\rpiezaSelec := escaqueSelec getPiezaEscaque.\rposiblesMovimientos := piezaSelec posiblesMov: tablero.\r\r((posiblesMovimientos) isEmpty)ifTrue: [ UIManager default alert: \'La pieza elegida no tiene posibles movimientos. Por favor ingrese una pieza valida\'.\rerror:=true.\r\t].\r].\r].\r\rescaqueSelecParaMov:=self menuJugadorElijeMovimiento: posiblesMovimientos.\rpiezaComida:=self jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov.\r^piezaComida.\r',			#stamp : 'ManuelLatorre 7/30/2019 17:57',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:58:22.891052-03:00' ],		#prior : OmReference [ '149' ],		#self : OmReference [ '150' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\t(self menuPidePiezaJugador: numeroJugador ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t]',			#stamp : 'ManuelLatorre 7/30/2019 15:57',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu piezaComida|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\tpiezaComida:=(self menuPidePiezaJugador: numeroJugador ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t].\r^piezaComida.',			#stamp : 'ManuelLatorre 7/30/2019 17:58',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:58:57.651052-03:00' ],		#prior : OmReference [ '150' ],		#self : OmReference [ '151' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\t(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 15:58',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 17:58',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T17:59:41.847052-03:00' ],		#prior : OmReference [ '151' ],		#self : OmReference [ '152' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 17:58',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 17:59',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:00:33.088052-03:00' ],		#prior : OmReference [ '152' ],		#self : OmReference [ '153' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 17:59',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:00',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:00:50.944052-03:00' ],		#prior : OmReference [ '153' ],		#self : OmReference [ '154' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov\r|piezaComida|\rescaqueSelec setPieza: nil. "indico que el viejo escaque esta vacio ahora"\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:["si el nuevo escaque tiene una pieza elimino el morph e indico que esta vacio para agregar la nueva pieza"\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\rpiezaComida := (escaqueSelecParaMov getPiezaEscaque).\r].\rescaqueSelecParaMov setPieza: piezaSelec."agrego la nueva pieza al escaque"\rpiezaSelec setFilaPieza: (escaqueSelecParaMov getFilaEscaque )."seteo nueva fila y columna de la pieza"\rpiezaSelec setColumnaPieza: (escaqueSelecParaMov getColumnaEscaque ).\rescaqueSelecParaMov addMorph: (piezaSelec)."Indico que el escaque ahora posee la imagen de la pieza (para que se vea la imagen de la pieza sobre la imagen)"\r(piezaSelec)position: escaqueSelecParaMov position."ubico la imagen"\r^piezaComida.',			#stamp : 'ManuelLatorre 7/30/2019 17:56',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'jugadorHaceMovimiento:deEscaque:aEscaque:',			#protocol : #'as yet unclassified',			#sourceCode : 'jugadorHaceMovimiento: piezaSelec deEscaque: escaqueSelec aEscaque: escaqueSelecParaMov\r|piezaComida|\rpiezaComida:=nil.\rescaqueSelec setPieza: nil. "indico que el viejo escaque esta vacio ahora"\r(escaqueSelecParaMov getPiezaEscaque )ifNotNil:["si el nuevo escaque tiene una pieza elimino el morph e indico que esta vacio para agregar la nueva pieza"\r(escaqueSelecParaMov getPiezaEscaque) delete.\rescaqueSelecParaMov setPieza: nil.\rpiezaComida := (escaqueSelecParaMov getPiezaEscaque).\r].\rescaqueSelecParaMov setPieza: piezaSelec."agrego la nueva pieza al escaque"\rpiezaSelec setFilaPieza: (escaqueSelecParaMov getFilaEscaque )."seteo nueva fila y columna de la pieza"\rpiezaSelec setColumnaPieza: (escaqueSelecParaMov getColumnaEscaque ).\rescaqueSelecParaMov addMorph: (piezaSelec)."Indico que el escaque ahora posee la imagen de la pieza (para que se vea la imagen de la pieza sobre la imagen)"\r(piezaSelec)position: escaqueSelecParaMov position."ubico la imagen"\r^piezaComida.',			#stamp : 'ManuelLatorre 7/30/2019 18:00',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:05:39.353052-03:00' ],		#prior : OmReference [ '154' ],		#self : OmReference [ '155' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:00',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r(piezaComida)ifNotNil: [ \r\t\t\r\t ]\r\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t End of statement list encountered ->(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:05',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:12:38.056052-03:00' ],		#prior : OmReference [ '155' ],		#self : OmReference [ '156' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r(piezaComida)ifNotNil: [ \r\t\t\r\t ]\r\r\t\r"UN JUGADOR SE RINDE (2)"\t\r\t End of statement list encountered ->(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:05',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:12',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:16:09.020052-03:00' ],		#prior : OmReference [ '156' ],		#self : OmReference [ '157' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:12',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\t(jugadorEnTurno getColPiezas)remove: piezaComida. \r\t\t ].\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:16',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:16:41.193052-03:00' ],		#prior : OmReference [ '157' ],		#self : OmReference [ '158' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\t(jugadorEnTurno getColPiezas)remove: piezaComida. \r\t\t ].\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:16',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\t(jugadorEnTurno getColPiezas)remove: piezaComida. \r\t\t ].\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:16',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:17:17.601052-03:00' ],		#prior : OmReference [ '158' ],		#self : OmReference [ '159' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\t(jugadorEnTurno getColPiezas)remove: piezaComida. \r\t\t ].\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:16',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:17',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:31:18.486052-03:00' ],		#prior : OmReference [ '159' ],		#self : OmReference [ '160' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r\t\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:17',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"La"\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:31',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:32:51.167052-03:00' ],		#prior : OmReference [ '160' ],		#self : OmReference [ '161' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"La"\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:31',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"La"\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:32',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:36:23.217052-03:00' ],		#prior : OmReference [ '161' ],		#self : OmReference [ '162' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"La"\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:32',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador:\',turnoJugadorNum asString.\r\t\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:36',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:36:30.735052-03:00' ],		#prior : OmReference [ '162' ],		#self : OmReference [ '163' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador:\',turnoJugadorNum asString.\r\t\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:36',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\t\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:36',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:40:43.524052-03:00' ],		#prior : OmReference [ '163' ],		#self : OmReference [ '164' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\t\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\t ].\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:36',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:40',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:41:42.301052-03:00' ],		#prior : OmReference [ '164' ],		#self : OmReference [ '165' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:40',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador=nil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:41',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:41:55.690052-03:00' ],		#prior : OmReference [ '165' ],		#self : OmReference [ '166' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador=nil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:41',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:41',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:42:09.386052-03:00' ],		#prior : OmReference [ '166' ],		#self : OmReference [ '167' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:41',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNotNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:42',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:43:11.690052-03:00' ],		#prior : OmReference [ '167' ],		#self : OmReference [ '168' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasBlancas:',			#protocol : #PiezasBlancas,			#sourceCode : 'crearPiezasBlancas: unTablero\r|miEscaque colPiezasBlancas|\rcolPiezasBlancas:= OrderedCollection new.\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 2 at: col.\r\t(miEscaque) setPieza:(Peon new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonBlanco. "Llamo un metodo para poder \tmodificar en el la direccion donde se encuentran las imagenes "\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 2."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: col.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."agrego y muestro el peon sobre el \tescaque"\r\t((miEscaque getPiezaEscaque) position: (miEscaque) position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t((miEscaque getPiezaEscaque)setPrimerMovimiento: true).\r\t].\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 1 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 1.\t\r\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 1 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 2.\t\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 3.\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco . \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 6.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 5.\r\t(miEscaque) setPieza:(Dama new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasBlancas do: [:pieza| pieza color: Color white ].\r\t\r\t^colPiezasBlancas.',			#stamp : 'ManuelLatorre 7/30/2019 16:58',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #'crearPiezasBlancas:',			#protocol : #PiezasBlancas,			#sourceCode : 'crearPiezasBlancas: unTablero\r|miEscaque colPiezasBlancas|\rcolPiezasBlancas:= OrderedCollection new.\r"CREO PEONES"\r1 to: 8 do:[:col| \r\tmiEscaque:= unTablero escaqueAt: 2 at: col.\r\t(miEscaque) setPieza:(Peon new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenPeonBlanco. "Llamo un metodo para poder \tmodificar en el la direccion donde se encuentran las imagenes "\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 2."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: col.\t\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."agrego y muestro el peon sobre el \tescaque"\r\t((miEscaque getPiezaEscaque) position: (miEscaque) position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t((miEscaque getPiezaEscaque)setPrimerMovimiento: true).\r\t].\r\r"CREO TORRES"\r\r\tmiEscaque:= unTablero escaqueAt: 1 at: 1.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 1.\t\r\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 8.\r\t(miEscaque) setPieza:(Torre new)."Seteo la torre al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenTorreBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 8.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"Creo caballos"\r\tmiEscaque:= unTablero escaqueAt: 1 at: 2.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 2.\t\r\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 7.\r\t(miEscaque) setPieza:(Caballo new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenCaballoBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 7.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\t"CreoAlfiles"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 3.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 3.\r\t\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 6.\r\t(miEscaque) setPieza:(Alfil new)."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenAlfilBlanco . \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 6.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo dama"\r\t\r\tmiEscaque:= unTablero escaqueAt: 1 at: 5.\r\t(miEscaque) setPieza:(Dama new )."Seteo el peon al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenDamaBlanca. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 1."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 5.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t"Creo rey"\r\t\r\tmiEscaque:= unTablero escaqueAt: 6 at: 4.\r\t(miEscaque) setPieza:(Rey new)."Seteo el rey al escaque"\r\t((miEscaque) getPiezaEscaque)form: self imagenReyBlanco. \r\t((miEscaque) getPiezaEscaque)setFilaPieza: 6."seteo ubicacion de la pieza para identificarla de las otras"\r\t((miEscaque) getPiezaEscaque)setColumnaPieza: 4.\t\r\t\r\t(miEscaque) addMorph: ((miEscaque) getPiezaEscaque )."muestro el torre sobre el escaque"\r\t((miEscaque getPiezaEscaque ) position: miEscaque position)."Lo ubico en el escaque"\r\tcolPiezasBlancas add: (miEscaque getPiezaEscaque).\r\t\r\tcolPiezasBlancas do: [:pieza| pieza color: Color white ].\r\t\r\t^colPiezasBlancas.',			#stamp : 'ManuelLatorre 7/30/2019 18:43',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:47:50.179052-03:00' ],		#prior : OmReference [ '168' ],		#self : OmReference [ '169' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNotNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:42',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #'as yet unclassified',			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNotNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:42',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:47:50.181052-03:00' ],		#prior : OmReference [ '169' ],		#self : OmReference [ '170' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNotNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].\r',			#stamp : 'ManuelLatorre 7/30/2019 18:42',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:48:49.144052-03:00' ],		#prior : OmReference [ '170' ],		#self : OmReference [ '171' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNotNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].',			#stamp : 'ManuelLatorre 7/30/2019 18:48',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:49:10.912052-03:00' ],		#prior : OmReference [ '171' ],		#self : OmReference [ '172' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu piezaComida|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\tpiezaComida:=(self menuPidePiezaJugador: numeroJugador ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t].\r^piezaComida.',			#stamp : 'ManuelLatorre 7/30/2019 17:58',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu piezaComida|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\tpiezaComida:=(self menuPidePiezaJugador: numeroJugador ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t].\r^piezaComida.',			#stamp : 'ManuelLatorre 7/30/2019 17:58',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:49:10.913052-03:00' ],		#prior : OmReference [ '172' ],		#self : OmReference [ '173' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #Menu,			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu piezaComida|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\tpiezaComida:=(self menuPidePiezaJugador: numeroJugador ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t].\r^piezaComida.',			#stamp : 'ManuelLatorre 7/30/2019 17:58',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:49:43.744052-03:00' ],		#prior : OmReference [ '173' ],		#self : OmReference [ '174' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'menuOpcionesJugador:',			#protocol : #'as yet unclassified',			#sourceCode : 'menuOpcionesJugador: numeroJugador\r|menu piezaComida|\rmenu:= UIManager default\rchooseFrom: #(\'HACER MOVIMIENTO\' \'\' \'RENDIRSE\' \'OFRECER TABLAS\')\rlines: #(2 3) message: \'TURNO: Jugador\',numeroJugador asString,\'\r   Elija una opcion:\'. "Utilizo 2 casillas para hacer movimiento para no apretar Rendirse sin querer ya que quedan bastante juntas las opciones"\r((menu<=2))ifTrue: [ "Elije hacer movimiento pasa al menu para realizarlo"\r\tpiezaComida:=(self menuPidePiezaJugador: numeroJugador ).\r\t ].\r\r(menu=3)ifTrue: [ "Elije Rendirse"\r\trendicion :=true.\r\t ].\r(menu=4)ifTrue:[\r\ttablas:= true.\r\t].\r^piezaComida.',			#stamp : 'ManuelLatorre 7/30/2019 18:49',			#package : #'POO Tp obligatorio libre 2'		}	}}OmEntry {	#tags : {		#author : 'ManuelLatorre',		#time : DateAndTime [ '2019-07-30T18:50:36.606052-03:00' ],		#prior : OmReference [ '174' ],		#self : OmReference [ '175' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNotNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].',			#stamp : 'ManuelLatorre 7/30/2019 18:48',			#package : #'POO Tp obligatorio libre 2'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Partida,				#isMetaSide : false			},			#name : #menuEmpezarJuego,			#protocol : #Menu,			#sourceCode : 'menuEmpezarJuego "Menu que aparece si se selecciono \'CREAR PARTIDA\'"\r|menu turnoJugadorNum jugadorEnTurno jugadorFueraTurnoNum jugadorFueraTurno rendicion posiblesTablas noSaltar tablasRechazadas piezaComida colPiezasJugadorEnTurno reyNegro reyBlanco|\rturnoJugadorNum :=1."Como el jugador de piezas blancas esta en la posicion 1 de mi coleccion le asigno el primer turno a este"\rjugadorFueraTurnoNum:=2.\rnoSaltar:=true.\rganador:=nil.\r\rjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\rjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\t\r\treyBlanco:= (jugadorEnTurno getColPiezas)at:16."el rey se encuentra en la posicion 16 en la coleccion de piezas ya que fue el ultimo en crearse y agregarse a esta"\r\treyNegro :=(jugadorFueraTurno getColPiezas)at:16.\r\rmenu:=UIManager default "Elije empezar con el juego o salir (Borra el tablero)"\rchooseFrom: #(\'JUGAR\' \'SALIR\')\rlines: #(1) message: \'Elija una Opcion\'.\r(menu=1)ifTrue: [\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum ). "indico jugador con primer turno (piezas blancas)"\r\tjugadorFueraTurno :=(colJugadores at: turnoJugadorNum )."indico jugador fuera de turno (piezas negras)"\r\r[ ganador ] whileNil: [ "Mientras no termine el juego por empate, rendicion o jake mate"\r\ttablasRechazadas :=false.\r\tpiezaComida:=(jugadorEnTurno) menuOpcionesJugador: turnoJugadorNum ."Envio numero de jugador en turno para indicarlo en el menu. Resivo si se comio una pieza (y cual) para poder quitarla de la coleccion de piezas del otro jugador si no se comio ninguna se resive nil".\r\t\r"ELIMINO PIEZA COMIDA POR EL JUGADOR ANTERIOR DE LA COLECCION DEL JUGADOR EN TURNO ACTUAL"\r\t(piezaComida)ifNotNil: [ \r\t\tcolPiezasJugadorEnTurno := jugadorEnTurno getColPiezas.\r\t\tcolPiezasJugadorEnTurno remove: piezaComida .\r\t\t ].\r"Victoria jugador"\r((piezaComida = reyBlanco)|(piezaComida = reyNegro))ifTrue: [ \r\tganador:= \'Jugador: \',turnoJugadorNum asString.\r\tUIManager default alert:(\'Ganador: \',ganador) title: \'UN REY A SIDO TOMADO\'.]\r\t ].\r\r"UN JUGADOR SE RINDE (1)"\t\r\t\trendicion:=(jugadorEnTurno getRendicion)."Verifica si el jugador elijio rendirce"\r\r"SE PROPONEN TABLAS"\r\t\tposiblesTablas:=(jugadorEnTurno getTablas)."Verifica si el jugador prouso tablas"\r\t\t(posiblesTablas)ifTrue: [ \r\t\tempate:=(jugadorFueraTurno menuTablas: jugadorFueraTurnoNum)."Pregunto al otro jugador si quiere aceptar las tablas"\r\t(empate) ifTrue: [ganador := \'EMPATE\'.\r\t\t\tUIManager default alert:(\'La partida se resolvio en tablas\') title: \'FIN DEL JUEGO\'.\r\t\t\t]."Si acepta indico que termino el juego"\r\t(empate) ifFalse: [posiblesTablas:= false.\r\t\t\tUIManager default alert: \'El adversario rechazo la propuesta de tablas elija una opcion\' title: \'Jugador \',turnoJugadorNum asString.\r\t\t\ttablasRechazadas:=true.\r\t\t\tjugadorEnTurno setTablas: false."seteo nuevamente en false la variable tablas del jugador que propuso (Se modificaba en menuOpcionesJugador a true cuando ofrecia tablas)"\r\t\t\t\t]."Si el otro jugador lo rechaza le indico al jugador que rechazaron la propuesta y seteo tablasrechazadas en true para que no se produzca un cambio de turno y que el jugador que propuso no pierda su turno y elija una opcion nuevamente"\r\t\t\t ].\r\t\t\r"UN JUGADOR TERMINA SU TURNO Y PASA AL SIGUIENTE JUGADOR"\t\t\r(tablasRechazadas & (ganador isNotNil)) ifFalse: [  "Si se rechazaron tablas esto hace que el jugador que las propuso no pierda su turno"\r\tnoSaltar :=true.\r\t(turnoJugadorNum=1)ifTrue: [jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\t turnoJugadorNum :=2. \r\t\t noSaltar :=false. "Lo utilizo para indicar que ya se hizo un cambio"\r\t\t]."Intercambio los turnos"\r\t\t(turnoJugadorNum=2 & noSaltar)ifTrue: [ jugadorFueraTurnoNum :=turnoJugadorNum.\r\t\tturnoJugadorNum:=1.\r\t\t ].\r\tjugadorEnTurno:= (colJugadores at: turnoJugadorNum )."jugador1: piezas blancas jugador2 piezas negras."\r\tjugadorFueraTurno :=(colJugadores at: jugadorFueraTurnoNum ).\r\t].\r\t\r"UN JUGADOR SE RINDE (2)"\t\r(rendicion)ifTrue: [ ganador:= (jugadorEnTurno asString).\r\tUIManager default alert:(\'Ganador: Jugador\',turnoJugadorNum asString) title: \'UN JUGADOR SE A RENDIDO\'.]\r\r\t ].\r"FIN DEL JUEGO"\r\ttablero delete."si sale de while significa que termino la partida por lo tanto borro el tablero"\r\r(menu=2)ifTrue: [\r\ttablero delete. "Si elije \'SALIR\' borro el Morph tablero (como las piezas \'estan a√±adidas\' a este tambien desaparecen"\r\t ].',			#stamp : 'ManuelLatorre 7/30/2019 18:50',			#package : #'POO Tp obligatorio libre 2'		}	}}